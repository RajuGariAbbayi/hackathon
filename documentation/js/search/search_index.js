var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.438,1,2.397]],["body/controllers/AppController.html",[0,1.927,1,3.212,2,1.927,3,0.273,4,0.238,5,4.016,6,0.423,7,3.556,8,3.212,9,3.212,10,3.212,11,3.212,12,3.212,13,0.505,14,1.872,15,5.368,16,1.352,17,0.02,18,3.556,19,4.716,20,2.708,21,1.519,22,1.872,23,0.018,24,0.018]],["title/modules/AppModule.html",[25,2.192,26,2.397]],["body/modules/AppModule.html",[1,2.789,2,1.673,3,0.237,4,0.207,17,0.021,23,0.017,24,0.017,26,4.844,27,2.033,28,2.639,29,3.487,30,3.487,31,3.487,32,3.892,33,3.892,34,3.892,35,3.892,36,3.892,37,3.053,38,2.351,39,2.351,40,4.094,41,2.55,42,4.094]],["title/injectables/AppService.html",[36,2.192,43,1.633]],["body/injectables/AppService.html",[3,0.284,4,0.248,6,0.441,7,3.701,13,0.526,14,1.919,15,5.464,17,0.02,20,2.819,21,1.581,22,1.581,23,0.018,24,0.018,36,3.057,44,2.278,45,4.181,46,3.343,47,3.343,48,3.343,49,2.819]],["title/entities/Bookings.html",[50,1.438,51,1.438]],["body/entities/Bookings.html",[3,0.187,4,0.163,6,0.29,13,0.346,16,1.86,17,0.022,22,2.123,23,0.014,24,0.014,50,1.319,51,2.317,52,1.854,53,2.749,54,1.299,55,3.561,56,3.084,57,1.299,58,3.856,59,2.295,60,3.084,61,2.053,62,2.162,63,0.877,64,2.814,65,2.295,66,1.712,67,1.04,68,2.01,69,3.856,70,3.228,71,2.248,72,2.248,73,2.749,74,3.414,75,1.603,76,2.434,77,3.228]],["title/controllers/BookingsController.html",[0,1.438,78,2.397]],["body/controllers/BookingsController.html",[0,1.759,2,1.759,3,0.249,4,0.217,6,0.386,13,0.461,14,1.768,16,1.235,17,0.02,21,1.386,23,0.017,24,0.017,51,2.244,61,2.189,63,0.582,78,2.932,79,3.666,80,2.932,81,0.764,82,4.676,83,3.666,84,3.419,85,2.932,86,3.246,87,2.932,88,3.246,89,2.932,90,3.246,91,2.932,92,3.666,93,2.137,94,1.873,95,1.559,96,1.308,97,1.559,98,1.873,99,2.472,100,2.681,101,2.472]],["title/classes/BookingsDTO.html",[81,0.625,84,2.192]],["body/classes/BookingsDTO.html",[3,0.199,4,0.174,6,0.309,13,0.368,16,1.81,17,0.022,22,2.178,23,0.015,24,0.015,51,1.406,54,1.357,55,3.223,56,3.223,57,1.357,58,4.03,59,2.349,60,3.223,61,1.959,62,2.11,63,0.891,65,2.427,66,1.81,67,1.108,71,2.349,72,2.349,84,2.947,102,1.174,103,2.93,104,5.826,105,4.03]],["title/modules/BookingsModule.html",[25,2.192,32,2.192]],["body/modules/BookingsModule.html",[2,1.96,3,0.278,4,0.242,17,0.02,23,0.018,24,0.018,27,2.381,28,2.916,32,4.229,37,3.374,38,2.755,39,2.755,41,2.987,78,3.267,106,4.085,107,4.085,108,4.122,109,4.796]],["title/classes/BookingsRepository.html",[81,0.625,110,2.397]],["body/classes/BookingsRepository.html",[3,0.304,4,0.265,6,0.471,17,0.019,23,0.019,24,0.019,99,3.013,102,1.791,110,3.573,111,4.468,112,3.303,113,3.267]],["title/injectables/BookingsService.html",[43,1.633,108,2.192]],["body/injectables/BookingsService.html",[3,0.235,4,0.205,6,0.474,13,0.434,14,1.701,17,0.021,21,1.306,23,0.016,24,0.016,44,1.882,51,2.159,54,1.515,63,0.714,66,1.163,75,2.013,81,0.72,82,4.499,83,3.453,84,3.29,93,2.013,95,1.913,96,1.605,97,1.913,98,1.764,99,3.034,101,2.329,108,3.29,110,3.598,112,2.16,114,3.453,115,4.002,116,3.034,117,2.329,118,4.055,119,2.329,120,2.329,121,4.055,122,4.055,123,4.055,124,2.762]],["title/classes/DoctorRepository.html",[81,0.625,125,2.397]],["body/classes/DoctorRepository.html",[3,0.298,4,0.26,6,0.462,17,0.019,23,0.019,24,0.019,102,1.758,112,2.744,113,3.207,125,3.507,126,4.386,127,2.744,128,3.883,129,2.557,130,2.39,131,2.958]],["title/entities/Doctors.html",[50,1.438,132,2.021]],["body/entities/Doctors.html",[3,0.181,4,0.158,6,0.462,13,0.335,16,1.877,17,0.022,22,2.137,23,0.014,24,0.014,50,1.28,52,1.799,54,1.271,57,1.271,62,2.137,63,0.885,64,3.128,65,2.422,66,1.807,67,1.656,68,1.95,71,1.555,72,1.555,81,0.556,129,1.555,132,2.545,133,2.667,134,3.775,135,3.775,136,3.775,137,3.018,138,3.775,139,3.775,140,3.775,141,2.133,142,1.95,143,1.668,144,1.799,145,2.667,146,3.132,147,3.132,148,2.361]],["title/classes/DoctorsDTO.html",[81,0.625,149,2.192]],["body/classes/DoctorsDTO.html",[3,0.171,4,0.149,6,0.488,13,0.315,16,1.816,17,0.022,22,2.135,23,0.013,24,0.013,54,1.216,57,1.216,62,1.97,63,0.872,64,1.462,65,2.379,66,1.722,67,1.856,81,0.523,100,1.834,102,1.005,130,1.367,131,1.691,132,1.691,134,4.234,135,4.234,136,4.234,137,3.386,138,4.234,139,4.234,143,1.569,149,1.834,150,2.508,151,1.834,152,3.637,153,6.333,154,4.313,155,2.508,156,2.508,157,2.945,158,2.508]],["title/classes/ExceptionExceptionFilter.html",[81,0.625,159,2.653]],["body/classes/ExceptionExceptionFilter.html",[3,0.264,4,0.23,6,0.409,13,0.489,14,1.834,17,0.02,21,1.469,23,0.018,24,0.018,63,0.617,95,1.652,96,1.386,97,1.652,102,1.557,127,2.43,159,3.44,160,3.885,161,3.885,162,3.885,163,4.562,164,4.562,165,3.885,166,4.562,167,5.695,168,4.562,169,5.695,170,5.695,171,5.695,172,4.562,173,4.562]],["title/injectables/JwtAuthGuard.html",[43,1.633,174,2.653]],["body/injectables/JwtAuthGuard.html",[3,0.306,4,0.266,6,0.474,17,0.019,23,0.019,24,0.019,44,2.45,174,4.693,175,4.496,176,4.496,177,5.279]],["title/interfaces/JwtPayload.html",[178,2.653,179,2.397]],["body/interfaces/JwtPayload.html",[3,0.281,4,0.245,6,0.436,13,0.52,17,0.02,22,2.14,23,0.018,24,0.018,54,1.697,63,0.656,65,2.275,66,1.697,179,3.305,180,4.852,181,4.132,182,4.132,183,4.347]],["title/injectables/JwtStrategy.html",[43,1.633,184,2.192]],["body/injectables/JwtStrategy.html",[3,0.256,4,0.223,6,0.397,13,0.473,14,1.797,17,0.021,21,1.423,23,0.017,24,0.017,44,2.05,63,0.755,95,2.021,96,1.696,97,2.021,116,3.206,117,2.537,119,2.537,120,2.537,179,4.167,184,2.751,185,3.763,186,4.418,187,6.119,188,3.763,189,3.514,190,4.418,191,4.418,192,3.763]],["title/entities/Locations.html",[50,1.438,94,1.531]],["body/entities/Locations.html",[3,0.198,4,0.172,6,0.306,13,0.365,16,1.851,17,0.022,22,2.117,23,0.015,24,0.015,50,1.394,52,1.959,54,1.349,57,1.349,59,2.232,63,0.872,64,3.024,65,2.342,66,1.747,67,1.734,68,2.125,71,1.694,72,1.694,81,0.606,94,2.047,129,1.694,141,2.324,142,2.125,143,1.818,144,1.959,148,2.573,193,2.906,194,4.007,195,4.007,196,3.205,197,3.205,198,4.007,199,2.573,200,3.412,201,2.906,202,2.906]],["title/controllers/LocationsController.html",[0,1.438,203,2.397]],["body/controllers/LocationsController.html",[0,1.566,2,1.566,3,0.222,4,0.193,6,0.344,8,2.61,9,2.61,10,2.61,11,2.61,12,2.61,13,0.41,14,1.639,16,1.46,17,0.021,21,1.639,23,0.016,24,0.016,49,2.201,61,2.36,63,0.518,80,2.61,85,3.467,87,3.467,89,3.467,91,2.61,92,3.264,93,1.903,94,2.835,95,1.388,96,1.165,97,1.388,98,2.215,203,2.61,204,3.264,205,4.336,206,4.868,207,3.264,208,3.171,209,2.89,210,2.89,211,3.838,212,2.89,213,2.89,214,3.264,215,2.89]],["title/classes/LocationsDTO.html",[81,0.625,208,2.192]],["body/classes/LocationsDTO.html",[3,0.198,4,0.173,6,0.307,13,0.367,16,1.749,17,0.022,22,2.151,23,0.015,24,0.015,54,1.353,57,1.353,59,2.236,63,0.873,65,2.345,66,1.749,67,1.738,72,1.701,81,0.608,94,1.491,102,1.17,151,2.134,152,3.503,154,4.154,194,4.597,195,4.019,196,3.676,197,3.676,198,4.597,208,2.134,216,2.918,217,2.583,218,3.558,219,3.426,220,2.918,221,2.918]],["title/modules/LocationsModule.html",[25,2.192,33,2.192]],["body/modules/LocationsModule.html",[2,1.96,3,0.278,4,0.242,17,0.02,23,0.018,24,0.018,27,2.381,28,2.916,33,4.229,37,3.374,38,2.755,39,2.755,41,2.987,203,3.267,222,4.085,223,4.085,224,4.122,225,4.796]],["title/classes/LocationsRepository.html",[81,0.625,226,2.397]],["body/classes/LocationsRepository.html",[3,0.298,4,0.26,6,0.462,17,0.019,23,0.019,24,0.019,102,1.758,112,2.744,113,3.207,127,2.744,128,3.883,129,2.557,130,2.39,131,2.958,226,3.507,227,4.386]],["title/injectables/LocationsService.html",[43,1.633,224,2.192]],["body/injectables/LocationsService.html",[3,0.221,4,0.193,6,0.342,13,0.409,14,1.634,17,0.021,18,2.877,20,2.191,21,1.634,23,0.016,24,0.016,44,1.771,46,2.598,47,2.598,48,2.598,49,2.191,54,1.456,63,0.686,66,1.094,75,1.894,93,1.894,94,2.208,95,1.838,96,1.542,97,1.838,98,2.208,115,3.884,116,3.491,117,2.191,119,2.191,120,2.191,124,2.598,137,2.598,205,4.323,206,4.857,207,3.249,208,3.161,215,2.877,221,3.249,224,2.376,226,3.884,228,3.249,229,3.815,230,2.598,231,2.877,232,3.815,233,3.815,234,3.815]],["title/classes/LoginDTO.html",[81,0.625,235,2.192]],["body/classes/LoginDTO.html",[3,0.257,4,0.224,6,0.399,13,0.476,16,1.606,17,0.021,22,2.074,23,0.017,24,0.017,54,1.606,57,1.274,63,0.757,65,2.153,102,1.516,151,2.766,152,3.216,183,4.178,235,2.766,236,3.782,237,3.025,238,4.625,239,4.441,240,4.441,241,4.441,242,3.782,243,3.782]],["title/injectables/ResponseInterceptor.html",[43,1.633,244,2.653]],["body/injectables/ResponseInterceptor.html",[3,0.264,4,0.23,6,0.409,13,0.489,14,1.834,17,0.021,20,2.62,21,1.469,23,0.018,24,0.018,44,2.117,63,0.617,95,1.652,96,1.386,97,1.652,98,1.985,244,3.44,245,3.885,246,4.562,247,5.695,248,4.562,249,4.851,250,5.695,251,5.695,252,4.562,253,3.885,254,3.885,255,4.562,256,4.562]],["title/guards/RolesGuard.html",[257,2.653,258,2.653]],["body/guards/RolesGuard.html",[3,0.253,4,0.221,6,0.392,13,0.468,14,1.786,17,0.021,21,1.408,23,0.017,24,0.017,63,0.75,95,2.008,96,1.685,97,2.008,98,1.902,117,2.511,119,2.511,120,2.511,165,3.723,249,4.722,253,3.723,254,3.723,258,3.296,259,4.372,260,3.723,261,5.545,262,5.545,263,4.372,264,6.089,265,4.372,266,4.372]],["title/entities/Slots.html",[50,1.438,59,1.353]],["body/entities/Slots.html",[3,0.184,4,0.16,6,0.285,13,0.34,16,1.853,17,0.022,22,2.038,23,0.014,24,0.014,50,1.299,51,2.301,52,1.826,54,1.285,56,3.051,57,1.285,59,1.994,60,3.051,61,1.622,62,2.039,63,0.874,64,2.575,65,2.165,66,1.615,67,1.442,68,1.98,69,3.815,71,2.575,72,2.575,81,0.564,94,2.583,99,1.826,129,1.578,141,2.165,142,1.98,143,1.694,144,1.826,196,3.051,199,2.397,267,2.708,268,3.179,269,3.179,270,3.179,271,2.708,272,3.179,273,1.383,274,2.397]],["title/controllers/SlotsController.html",[0,1.438,275,2.397]],["body/controllers/SlotsController.html",[0,1.285,2,1.285,3,0.182,4,0.159,6,0.399,8,2.141,9,2.141,10,2.141,11,2.141,12,2.141,13,0.337,14,1.431,16,1.478,17,0.021,21,1.66,23,0.014,24,0.014,57,1.274,59,2.154,61,2.432,63,0.697,67,1.431,80,2.141,85,3.51,87,3.51,89,3.51,91,2.141,95,1.609,96,1.35,97,1.609,98,2.243,99,1.805,101,1.805,130,1.459,214,2.677,275,2.141,276,2.677,277,3.785,278,4.39,279,3.785,280,2.677,281,2.768,282,2.37,283,2.37,284,3.886,285,3.143,286,3.143,287,1.805,288,2.677,289,3.351,290,3.785,291,2.37,292,2.37,293,2.677,294,2.677,295,2.677,296,3.489,297,2.37,298,2.37,299,3.143,300,3.026,301,3.143,302,3.143,303,3.143,304,2.677]],["title/classes/SlotsDTO.html",[81,0.625,281,2.192]],["body/classes/SlotsDTO.html",[3,0.191,4,0.166,6,0.295,13,0.352,16,1.724,17,0.022,22,2.099,23,0.014,24,0.014,51,2.336,54,1.316,56,3.599,57,1.516,59,1.765,60,3.599,61,1.662,62,2.07,63,0.881,64,1.634,65,2.198,66,1.64,67,1.478,71,1.634,72,2.278,81,0.584,94,2.616,102,1.124,105,2.803,143,1.754,144,1.89,151,2.05,152,3.283,154,3.894,156,2.803,196,3.599,218,2.482,273,1.432,281,2.05,305,2.803,306,3.291,307,3.291,308,3.291]],["title/modules/SlotsModule.html",[25,2.192,34,2.192]],["body/modules/SlotsModule.html",[2,1.96,3,0.278,4,0.242,17,0.02,23,0.018,24,0.018,27,2.381,28,2.916,34,4.229,37,3.374,38,2.755,39,2.755,41,2.987,275,3.267,309,4.085,310,4.085,311,4.122,312,4.796]],["title/classes/SlotsRepository.html",[81,0.625,313,2.397]],["body/classes/SlotsRepository.html",[3,0.245,4,0.214,6,0.488,13,0.454,14,1.751,17,0.02,21,1.365,23,0.017,24,0.017,57,1.559,61,1.969,62,2.293,63,0.573,67,1.751,95,1.535,96,1.288,97,1.535,102,1.447,112,2.259,113,2.64,116,3.123,127,2.897,129,2.104,130,2.524,131,2.435,192,3.611,273,1.844,300,2.887,313,2.887,314,3.611,315,4.239,316,5.437,317,4.239,318,4.239,319,4.239,320,4.239,321,4.239]],["title/injectables/SlotsService.html",[43,1.633,311,2.192]],["body/injectables/SlotsService.html",[3,0.192,4,0.167,6,0.414,13,0.355,14,1.486,17,0.021,18,2.501,20,1.905,21,1.709,23,0.014,24,0.014,44,1.54,46,2.259,47,2.259,48,2.259,49,1.905,54,1.324,57,1.324,59,2.04,61,1.671,63,0.717,66,0.951,67,1.486,75,1.647,93,1.647,95,1.922,96,1.613,97,1.922,98,2.309,101,3.048,115,3.614,116,3.585,117,1.905,119,1.905,120,1.905,124,2.259,130,1.54,189,3.294,230,2.259,231,2.501,274,2.501,277,3.93,278,4.52,279,3.93,280,2.825,281,2.874,288,2.825,295,2.825,296,3.755,300,2.259,304,2.825,311,2.066,313,3.614,322,2.825,323,3.317,324,3.317]],["title/classes/StatusDTO.html",[81,0.625,296,2.192]],["body/classes/StatusDTO.html",[3,0.273,4,0.238,6,0.423,13,0.505,16,1.352,17,0.02,23,0.018,24,0.018,54,1.667,61,2.105,62,2.383,63,0.638,102,1.61,127,2.512,152,2.708,154,3.96,243,4.016,273,2.53,296,2.937,325,4.016,326,5.814]],["title/entities/Users.html",[50,1.438,62,1.274]],["body/entities/Users.html",[3,0.15,4,0.131,6,0.233,13,0.278,16,1.894,17,0.022,22,2.012,23,0.012,24,0.012,50,1.062,51,2.239,52,1.492,54,1.11,55,3.149,57,1.11,59,1.97,62,1.675,63,0.893,64,2.72,65,2.287,66,1.753,67,1.65,68,1.618,71,2.296,72,2.296,73,2.213,74,2.918,75,1.29,76,1.959,81,0.461,96,1.176,129,1.29,132,1.492,140,3.296,141,1.77,142,1.618,143,1.384,144,1.492,145,2.213,148,1.959,183,2.636,197,2.636,199,2.918,201,2.213,202,2.213,217,2.918,238,2.918,273,1.131,274,1.959,287,2.656,327,2.213,328,3.296,329,3.489,330,3.296,331,2.598,332,2.598,333,2.598,334,3.87,335,3.87,336,2.598,337,2.598]],["title/controllers/UsersController.html",[0,1.438,338,2.397]],["body/controllers/UsersController.html",[0,1.128,2,1.128,3,0.16,4,0.139,6,0.43,8,1.88,9,1.88,10,1.88,11,1.88,12,1.88,13,0.296,14,1.303,16,1.513,17,0.021,21,1.699,23,0.013,24,0.013,49,2.752,57,1.161,61,2.369,62,1.466,63,0.713,67,1.303,76,3.052,80,1.88,85,2.756,87,2.756,89,2.756,91,1.88,95,1.911,96,1.603,97,1.911,98,2.296,100,2.984,101,2.752,130,1.281,149,2.521,230,1.88,235,2.984,237,3.263,273,1.761,287,2.752,289,3.979,290,4.494,338,1.88,339,2.351,340,3.447,341,3.447,342,2.351,343,2.761,344,4.081,345,2.351,346,4.791,347,2.351,348,2.351,349,2.761,350,2.351,351,2.082,352,3.052,353,3.052,354,2.761,355,2.761,356,2.521,357,2.082,358,2.082,359,2.761,360,2.761,361,2.761,362,2.761,363,2.761,364,2.761,365,2.351,366,2.761,367,3.447]],["title/classes/UsersDTO.html",[81,0.625,356,2.192]],["body/classes/UsersDTO.html",[3,0.163,4,0.142,6,0.253,13,0.302,16,1.751,17,0.022,22,2.054,23,0.013,24,0.013,51,1.981,54,1.178,55,3.628,57,1.178,63,0.898,64,1.398,65,2.347,66,1.751,67,1.824,71,1.398,75,1.398,81,0.5,93,1.398,96,1.473,99,1.617,102,0.961,132,1.617,143,2.188,144,2.358,151,1.754,152,3.506,183,2.797,197,3.301,217,3.655,218,4.016,220,2.399,238,3.655,242,2.399,273,2.109,287,2.784,328,4.128,329,3.301,330,4.128,356,1.754,368,2.399,369,4.847,370,2.816,371,4.847,372,4.107,373,2.816]],["title/modules/UsersModule.html",[25,2.192,35,2.192]],["body/modules/UsersModule.html",[2,1.796,3,0.254,4,0.222,17,0.021,23,0.017,24,0.017,27,2.182,28,2.762,35,4.328,37,3.195,38,2.524,39,2.524,41,2.737,184,4.368,338,2.993,374,3.743,375,3.743,376,3.743,377,3.996,378,4.395,379,4.395]],["title/classes/UsersRepository.html",[81,0.625,189,2.021]],["body/classes/UsersRepository.html",[3,0.298,4,0.26,6,0.462,17,0.019,23,0.019,24,0.019,102,1.758,112,2.744,113,3.207,127,2.744,128,3.883,129,2.557,130,2.39,131,2.958,189,2.958,380,4.386]],["title/injectables/UsersService.html",[43,1.633,377,2.192]],["body/injectables/UsersService.html",[3,0.172,4,0.15,6,0.449,13,0.319,14,1.376,17,0.021,21,1.76,23,0.013,24,0.013,44,1.381,46,2.027,47,2.027,48,2.027,54,1.226,57,1.226,62,1.548,63,0.783,66,0.854,67,1.376,75,1.477,93,1.477,95,2.096,96,1.759,97,2.096,98,2.378,100,2.662,101,1.709,115,3.406,116,3.647,117,1.709,119,1.709,120,1.709,124,2.027,125,3.722,130,1.381,149,2.662,155,2.535,188,2.535,189,2.872,230,2.027,235,3.115,237,3.406,273,2.176,287,2.872,289,2.244,340,3.64,341,3.64,342,2.535,344,3.64,348,3.64,350,2.535,356,2.662,367,2.535,377,1.854,381,2.535,382,5.465,383,2.976,384,2.976,385,2.976,386,2.976,387,2.976,388,2.976,389,2.535,390,2.976]],["title/coverage.html",[391,3.624]],["body/coverage.html",[0,1.489,1,0.806,4,0.06,5,1.008,17,0.022,23,0.006,24,0.006,36,0.737,43,2.1,45,1.008,50,1.489,51,0.484,53,1.008,59,0.455,62,0.429,63,0.16,78,0.806,79,1.008,81,0.95,84,0.737,86,0.892,88,0.892,90,0.892,93,0.588,94,0.515,103,1.008,108,0.737,110,0.806,111,1.008,114,1.008,125,0.806,126,1.008,132,0.68,133,1.008,149,0.737,150,1.008,158,1.008,159,0.892,160,1.008,161,1.008,162,1.008,174,0.892,175,1.008,176,1.008,178,0.892,179,0.806,181,1.008,182,1.008,184,0.737,185,1.008,189,0.68,193,1.008,203,0.806,204,1.008,208,0.737,209,0.892,210,0.892,211,0.892,212,0.892,213,0.892,216,1.008,224,0.737,226,0.806,227,1.008,228,1.008,235,0.737,236,1.008,244,0.892,245,1.008,257,0.892,258,0.892,260,1.008,267,1.008,275,0.806,276,1.008,281,0.737,282,0.892,283,0.892,284,0.892,291,0.892,292,0.892,296,0.737,297,0.892,298,0.892,305,1.008,311,0.737,313,0.806,314,1.008,322,1.008,325,1.008,327,1.008,338,0.806,339,1.008,351,0.892,352,0.892,353,0.892,356,0.737,357,0.892,358,0.892,368,1.008,377,0.737,380,1.008,381,1.008,391,0.892,392,1.184,393,1.184,394,1.184,395,5.877,396,6.922,397,7.154,398,7.021,399,1.008,400,1.008,401,1.008,402,1.008,403,1.008,404,1.008,405,1.008,406,1.008,407,1.008,408,1.008,409,1.008,410,1.008,411,1.008,412,1.008,413,1.008,414,1.008,415,1.008,416,1.008,417,1.008,418,1.008,419,1.008,420,1.008,421,1.008,422,1.008,423,1.008,424,1.008,425,1.008,426,1.008,427,1.008,428,1.008,429,1.008,430,1.008,431,1.008,432,1.008,433,1.008,434,4.523,435,2.047,436,2.047,437,3.224,438,1.184,439,2.047,440,1.008,441,1.184,442,1.008,443,1.184,444,1.184,445,1.744,446,1.008,447,1.008,448,1.184,449,1.184,450,1.184]],["title/dependencies.html",[28,2.102,451,2.937]],["body/dependencies.html",[17,0.023,23,0.015,24,0.015,28,1.836,81,0.882,131,2.124,452,3.697,453,6.003,454,3.697,455,3.697,456,3.697,457,3.697,458,3.697,459,4.97,460,3.697,461,3.697,462,3.697,463,3.697,464,3.697,465,4.97,466,3.697,467,3.697,468,3.697,469,3.697,470,3.697,471,3.697,472,3.697,473,3.697,474,3.697,475,3.697,476,3.697,477,3.697,478,3.697,479,4.97,480,3.697,481,3.697,482,3.697,483,4.97,484,3.697,485,3.697,486,3.697,487,3.697,488,3.697,489,3.697,490,3.697,491,3.697,492,3.697,493,3.697,494,3.697,495,3.697]],["title/miscellaneous/enumerations.html",[496,1.687,497,3.605]],["body/miscellaneous/enumerations.html",[13,0.463,17,0.021,23,0.017,24,0.017,61,2.439,63,0.745,66,1.889,74,3.262,96,1.315,127,2.305,271,5.161,273,2.397,287,3.164,329,3.752,496,2.485,497,3.685,498,4.327,499,5.508,500,4.327,501,4.327,502,6.06,503,4.327,504,4.327,505,3.685]],["title/miscellaneous/functions.html",[496,1.687,506,3.605]],["body/miscellaneous/functions.html",[13,0.562,17,0.019,23,0.019,24,0.019,440,4.468,442,5.622,496,3.013,506,4.468,507,5.246,508,5.246,509,5.246]],["title/index.html",[13,0.315,510,2.937,511,2.937]],["body/index.html",[6,0.311,7,2.615,17,0.022,23,0.015,24,0.015,112,1.848,391,2.615,512,3.468,513,3.468,514,4.759,515,3.468,516,3.468,517,3.468,518,3.468,519,3.468,520,3.468,521,5.432,522,3.468,523,3.468,524,3.468,525,6.481,526,3.468,527,3.468,528,6.328,529,3.468,530,3.468,531,4.759,532,3.468,533,3.468,534,3.468,535,3.468,536,4.759,537,4.759,538,3.468,539,3.468,540,3.468,541,4.759,542,4.759,543,3.468,544,3.468,545,3.468,546,3.468,547,3.468,548,3.468,549,2.954,550,3.468,551,3.468,552,3.468,553,3.468,554,2.954,555,3.468,556,3.468,557,3.468,558,3.468,559,3.468,560,3.468,561,3.468,562,3.468,563,3.468,564,3.468,565,3.468,566,3.468,567,3.468]],["title/modules.html",[27,2.386]],["body/modules.html",[17,0.018,23,0.018,24,0.018,26,3.248,27,2.368,32,2.97,33,2.97,34,2.97,35,2.97,549,5.774,568,6.78,569,6.78,570,6.78]],["title/overview.html",[571,4.093]],["body/overview.html",[2,1.367,17,0.021,23,0.014,24,0.014,26,4.669,27,1.66,28,2.304,29,2.848,30,2.848,31,2.848,32,3.766,33,3.766,34,3.766,35,4.075,36,3.319,37,2.665,38,1.92,39,1.92,44,1.552,52,1.92,102,1.142,106,2.848,107,2.848,108,3.319,178,2.521,184,3.997,222,2.848,223,2.848,224,3.319,257,2.521,309,2.848,310,2.848,311,3.319,374,2.848,375,2.848,376,2.848,377,3.319,571,2.848,572,5.329,573,3.344,574,3.344,575,4.64]],["title/miscellaneous/variables.html",[496,1.687,576,3.605]],["body/miscellaneous/variables.html",[13,0.086,17,0.022,20,1.805,22,2.12,23,0.004,24,0.004,49,3.011,51,1.93,57,1.682,59,1.906,61,1.333,63,0.89,66,1.892,75,3.276,86,1.092,88,1.092,90,1.092,94,2.858,100,0.902,137,0.545,142,0.499,209,1.092,210,1.092,211,1.092,212,1.092,213,1.092,215,3.351,231,3.351,237,0.986,273,2.572,282,1.092,283,1.092,284,1.092,291,1.092,292,1.092,293,4.535,294,5.451,297,1.092,298,1.092,300,0.986,329,0.545,345,1.234,347,3.136,351,1.092,352,1.092,353,1.092,357,1.092,358,1.092,365,1.234,389,2.071,395,5.607,399,1.234,400,1.234,401,1.234,402,1.234,403,1.234,404,1.234,405,1.234,406,1.234,407,1.234,408,1.234,409,1.234,410,1.234,411,1.234,412,1.234,413,1.234,414,1.234,415,1.234,416,1.234,417,1.234,418,1.234,419,1.234,420,1.234,421,1.234,422,1.234,423,1.234,424,1.234,425,1.234,426,1.234,427,1.234,428,1.234,429,1.234,430,1.234,431,1.234,432,1.234,433,1.234,445,0.682,446,2.922,447,1.234,496,0.46,505,3.785,554,2.071,576,0.682,577,1.448,578,5.325,579,3.144,580,1.448,581,4.104,582,2.432,583,2.432,584,0.801,585,1.448,586,1.448,587,2.432,588,0.801]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"modules/BookingsModule.html":{},"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"classes/DoctorRepository.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"modules/LocationsModule.html":{},"classes/LocationsRepository.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"modules/SlotsModule.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":575,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":574,"title":{},"body":{"overview.html":{}}}],["13/13",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["2.3.3",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["4.13.1",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":572,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":573,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["accepts",{"_index":65,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"interfaces/JwtPayload.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"classes/LoginDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["add",{"_index":285,"title":{},"body":{"controllers/SlotsController.html":{}}}],["added",{"_index":231,"title":{},"body":{"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"miscellaneous/variables.html":{}}}],["adding",{"_index":373,"title":{},"body":{"classes/UsersDTO.html":{}}}],["addnewbookings",{"_index":82,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{}}}],["addnewbookings(bookings",{"_index":83,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{}}}],["addnewlocations",{"_index":205,"title":{},"body":{"controllers/LocationsController.html":{},"injectables/LocationsService.html":{}}}],["addnewlocations(locations",{"_index":207,"title":{},"body":{"controllers/LocationsController.html":{},"injectables/LocationsService.html":{}}}],["addnewslots",{"_index":277,"title":{},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{}}}],["addnewslots(slotss",{"_index":280,"title":{},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{}}}],["again",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["age",{"_index":328,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["already",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":550,"title":{},"body":{"index.html":{}}}],["apiokresponse({description",{"_index":85,"title":{},"body":{"controllers/BookingsController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applications",{"_index":520,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":26,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":122,"title":{},"body":{"injectables/BookingsService.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":170,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["async",{"_index":116,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocationsService.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["auth.guard.ts",{"_index":176,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":560,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":177,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auto",{"_index":143,"title":{},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["autogenerated",{"_index":219,"title":{},"body":{"classes/LocationsDTO.html":{}}}],["available",{"_index":271,"title":{},"body":{"entities/Slots.html":{},"miscellaneous/enumerations.html":{}}}],["backers",{"_index":551,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["bcryptjs",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":72,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{}}}],["booked",{"_index":502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booking",{"_index":99,"title":{},"body":{"controllers/BookingsController.html":{},"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/UsersDTO.html":{}}}],["bookings",{"_index":51,"title":{"entities/Bookings.html":{}},"body":{"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"injectables/BookingsService.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings.slots",{"_index":268,"title":{},"body":{"entities/Slots.html":{}}}],["bookings.users",{"_index":331,"title":{},"body":{"entities/Users.html":{}}}],["bookings_added",{"_index":86,"title":{},"body":{"controllers/BookingsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_added_id",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_fetched_success",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_id_notfound",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_not_found",{"_index":88,"title":{},"body":{"controllers/BookingsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_not_sold",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_notfound_id",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_sold",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings_status_success",{"_index":405,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookingscontroller",{"_index":78,"title":{"controllers/BookingsController.html":{}},"body":{"controllers/BookingsController.html":{},"modules/BookingsModule.html":{},"coverage.html":{}}}],["bookingsdto",{"_index":84,"title":{"classes/BookingsDTO.html":{}},"body":{"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"injectables/BookingsService.html":{},"coverage.html":{}}}],["bookingsmodule",{"_index":32,"title":{"modules/BookingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules.html":{},"overview.html":{}}}],["bookingsrepo",{"_index":121,"title":{},"body":{"injectables/BookingsService.html":{}}}],["bookingsrepository",{"_index":110,"title":{"classes/BookingsRepository.html":{}},"body":{"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"coverage.html":{}}}],["bookingsservice",{"_index":108,"title":{"injectables/BookingsService.html":{}},"body":{"modules/BookingsModule.html":{},"injectables/BookingsService.html":{},"coverage.html":{},"overview.html":{}}}],["books",{"_index":274,"title":{},"body":{"entities/Slots.html":{},"injectables/SlotsService.html":{},"entities/Users.html":{}}}],["boolean",{"_index":266,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstarp",{"_index":508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":442,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":570,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":568,"title":{},"body":{"modules.html":{}}}],["builder",{"_index":319,"title":{},"body":{"classes/SlotsRepository.html":{}}}],["building",{"_index":515,"title":{},"body":{"index.html":{}}}],["cache",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["callhandler",{"_index":251,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["canactivate",{"_index":262,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":265,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactive",{"_index":261,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cant",{"_index":218,"title":{},"body":{"classes/LocationsDTO.html":{},"classes/SlotsDTO.html":{},"classes/UsersDTO.html":{}}}],["catch",{"_index":167,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["catch(exception",{"_index":168,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["change",{"_index":326,"title":{},"body":{"classes/StatusDTO.html":{}}}],["changed",{"_index":304,"title":{},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{}}}],["changes",{"_index":320,"title":{},"body":{"classes/SlotsRepository.html":{}}}],["changestatus",{"_index":316,"title":{},"body":{"classes/SlotsRepository.html":{}}}],["changestatus(id",{"_index":317,"title":{},"body":{"classes/SlotsRepository.html":{}}}],["cityname",{"_index":194,"title":{},"body":{"entities/Locations.html":{},"classes/LocationsDTO.html":{}}}],["class",{"_index":81,"title":{"classes/BookingsDTO.html":{},"classes/BookingsRepository.html":{},"classes/DoctorRepository.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"classes/LocationsDTO.html":{},"classes/LocationsRepository.html":{},"classes/LoginDTO.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"classes/StatusDTO.html":{},"classes/UsersDTO.html":{},"classes/UsersRepository.html":{}},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/BookingsDTO.html":{},"classes/BookingsRepository.html":{},"classes/DoctorRepository.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"classes/LocationsDTO.html":{},"classes/LocationsRepository.html":{},"classes/LoginDTO.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"classes/StatusDTO.html":{},"classes/UsersDTO.html":{},"classes/UsersRepository.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bookingsmodule",{"_index":106,"title":{},"body":{"modules/BookingsModule.html":{},"overview.html":{}}}],["cluster_bookingsmodule_providers",{"_index":107,"title":{},"body":{"modules/BookingsModule.html":{},"overview.html":{}}}],["cluster_locationsmodule",{"_index":222,"title":{},"body":{"modules/LocationsModule.html":{},"overview.html":{}}}],["cluster_locationsmodule_providers",{"_index":223,"title":{},"body":{"modules/LocationsModule.html":{},"overview.html":{}}}],["cluster_slotsmodule",{"_index":309,"title":{},"body":{"modules/SlotsModule.html":{},"overview.html":{}}}],["cluster_slotsmodule_providers",{"_index":310,"title":{},"body":{"modules/SlotsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":374,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":375,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":376,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":64,"title":{},"body":{"entities/Bookings.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["column({default",{"_index":270,"title":{},"body":{"entities/Slots.html":{}}}],["column({type",{"_index":73,"title":{},"body":{"entities/Bookings.html":{},"entities/Users.html":{}}}],["column({unique",{"_index":334,"title":{},"body":{"entities/Users.html":{}}}],["conflict_exception",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":315,"title":{},"body":{"classes/SlotsRepository.html":{}}}],["const",{"_index":336,"title":{},"body":{"entities/Users.html":{}}}],["constant.ts",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":117,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocationsService.html":{},"guards/RolesGuard.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["constructor(bookingsrepo",{"_index":118,"title":{},"body":{"injectables/BookingsService.html":{}}}],["constructor(locationsrepository",{"_index":229,"title":{},"body":{"injectables/LocationsService.html":{}}}],["constructor(reflector",{"_index":263,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(slotsrepository",{"_index":323,"title":{},"body":{"injectables/SlotsService.html":{}}}],["constructor(usersrepository",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["consultationfee",{"_index":134,"title":{},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{}}}],["contactperson",{"_index":195,"title":{},"body":{"entities/Locations.html":{},"classes/LocationsDTO.html":{}}}],["context",{"_index":253,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BookingsController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BookingsController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BookingsController.html":{},"modules/BookingsModule.html":{},"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"controllers/SlotsController.html":{},"modules/SlotsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coonect",{"_index":128,"title":{},"body":{"classes/DoctorRepository.html":{},"classes/LocationsRepository.html":{},"classes/UsersRepository.html":{}}}],["coverage",{"_index":391,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":92,"title":{},"body":{"controllers/BookingsController.html":{},"controllers/LocationsController.html":{}}}],["createdatecolumn",{"_index":332,"title":{},"body":{"entities/Users.html":{}}}],["credential",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["data",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SlotsService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":129,"title":{},"body":{"classes/DoctorRepository.html":{},"entities/Doctors.html":{},"entities/Locations.html":{},"classes/LocationsRepository.html":{},"entities/Slots.html":{},"classes/SlotsRepository.html":{},"entities/Users.html":{},"classes/UsersRepository.html":{}}}],["database/repository",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":55,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"classes/LoginDTO.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{}}}],["default",{"_index":75,"title":{},"body":{"entities/Bookings.html":{},"injectables/BookingsService.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":28,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules/LocationsModule.html":{},"modules/SlotsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":119,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocationsService.html":{},"guards/RolesGuard.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["description",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"classes/DoctorRepository.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"classes/LocationsRepository.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["details",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["detials",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["development",{"_index":527,"title":{},"body":{"index.html":{}}}],["doctor",{"_index":287,"title":{},"body":{"controllers/SlotsController.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["doctor.users",{"_index":333,"title":{},"body":{"entities/Users.html":{}}}],["doctordto",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["doctorrepository",{"_index":125,"title":{"classes/DoctorRepository.html":{}},"body":{"classes/DoctorRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["doctors",{"_index":132,"title":{"entities/Doctors.html":{}},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"coverage.html":{}}}],["doctors(one",{"_index":147,"title":{},"body":{"entities/Doctors.html":{}}}],["doctorsdto",{"_index":149,"title":{"classes/DoctorsDTO.html":{}},"body":{"classes/DoctorsDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["documentation",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":151,"title":{},"body":{"classes/DoctorsDTO.html":{},"classes/LocationsDTO.html":{},"classes/LoginDTO.html":{},"classes/SlotsDTO.html":{},"classes/UsersDTO.html":{}}}],["e2e",{"_index":538,"title":{},"body":{"index.html":{}}}],["education",{"_index":135,"title":{},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{}}}],["efficient",{"_index":516,"title":{},"body":{"index.html":{}}}],["email",{"_index":242,"title":{},"body":{"classes/LoginDTO.html":{},"classes/UsersDTO.html":{}}}],["emailid",{"_index":183,"title":{},"body":{"interfaces/JwtPayload.html":{},"classes/LoginDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["empty",{"_index":154,"title":{},"body":{"classes/DoctorsDTO.html":{},"classes/LocationsDTO.html":{},"classes/SlotsDTO.html":{},"classes/StatusDTO.html":{}}}],["empty'})@isemail",{"_index":370,"title":{},"body":{"classes/UsersDTO.html":{}}}],["empty'})@isnumber",{"_index":369,"title":{},"body":{"classes/UsersDTO.html":{}}}],["empty'})@isstring",{"_index":371,"title":{},"body":{"classes/UsersDTO.html":{}}}],["endtime",{"_index":56,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{}}}],["enter",{"_index":240,"title":{},"body":{"classes/LoginDTO.html":{}}}],["entities",{"_index":52,"title":{},"body":{"entities/Bookings.html":{},"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"entities/Users.html":{},"overview.html":{}}}],["entity",{"_index":50,"title":{"entities/Bookings.html":{},"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"entities/Users.html":{}},"body":{"entities/Bookings.html":{},"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"entities/Users.html":{},"coverage.html":{}}}],["enum",{"_index":74,"title":{},"body":{"entities/Bookings.html":{},"entities/Users.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":497,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["exception",{"_index":171,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["exceptionexceptionfilter",{"_index":159,"title":{"classes/ExceptionExceptionFilter.html":{}},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":166,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["exceptions",{"_index":164,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["executioncontext",{"_index":249,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["exisiting",{"_index":286,"title":{},"body":{"controllers/SlotsController.html":{}}}],["exist",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["experience",{"_index":136,"title":{},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{}}}],["exports",{"_index":379,"title":{},"body":{"modules/UsersModule.html":{}}}],["express",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":113,"title":{},"body":{"classes/BookingsRepository.html":{},"classes/DoctorRepository.html":{},"classes/LocationsRepository.html":{},"classes/SlotsRepository.html":{},"classes/UsersRepository.html":{}}}],["failed",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed_fetch_bookings",{"_index":90,"title":{},"body":{"controllers/BookingsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed_fetch_locations",{"_index":211,"title":{},"body":{"controllers/LocationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed_fetch_slots",{"_index":284,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed_fetch_user",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed_to_fetch",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["failre",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["failure",{"_index":290,"title":{},"body":{"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["fastify",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["fetch",{"_index":49,"title":{},"body":{"injectables/AppService.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["fetch_id_success",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetched",{"_index":293,"title":{},"body":{"controllers/SlotsController.html":{},"miscellaneous/variables.html":{}}}],["fetched_successfully",{"_index":408,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"modules/BookingsModule.html":{},"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"classes/DoctorRepository.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"modules/LocationsModule.html":{},"classes/LocationsRepository.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"modules/SlotsModule.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filter",{"_index":172,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["filter.filter.ts",{"_index":162,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["filter/exception",{"_index":161,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["found",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":514,"title":{},"body":{"index.html":{}}}],["fro",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["function",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":506,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":217,"title":{},"body":{"classes/LocationsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["generate",{"_index":155,"title":{},"body":{"classes/DoctorsDTO.html":{},"injectables/UsersService.html":{}}}],["generated",{"_index":144,"title":{},"body":{"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["get()@apiokresponse({description",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmedicalhistory",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getmedicalhistory(id",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getting",{"_index":510,"title":{"index.html":{}},"body":{}}],["grow",{"_index":546,"title":{},"body":{"index.html":{}}}],["guard",{"_index":257,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":259,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handled",{"_index":163,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["handler",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["here",{"_index":557,"title":{},"body":{"index.html":{}}}],["history",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["hospital",{"_index":196,"title":{},"body":{"entities/Locations.html":{},"classes/LocationsDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{}}}],["host",{"_index":169,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":564,"title":{},"body":{"index.html":{}}}],["id",{"_index":57,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"classes/LoginDTO.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":165,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["includes",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"injectables/BookingsService.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"modules/BookingsModule.html":{},"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"classes/DoctorRepository.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"modules/LocationsModule.html":{},"classes/LocationsRepository.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"modules/SlotsModule.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":43,"title":{"injectables/AppService.html":{},"injectables/BookingsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}},"body":{"coverage.html":{}}}],["injectables",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookingsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":120,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocationsService.html":{},"guards/RolesGuard.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["insert/update/delete/retrieve",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":524,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":526,"title":{},"body":{"index.html":{}}}],["instance",{"_index":124,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["integer",{"_index":140,"title":{},"body":{"entities/Doctors.html":{},"entities/Users.html":{}}}],["intercept",{"_index":247,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":248,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["interceptor",{"_index":246,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["interface",{"_index":178,"title":{"interfaces/JwtPayload.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":180,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["interger",{"_index":372,"title":{},"body":{"classes/UsersDTO.html":{}}}],["internal_server_error",{"_index":409,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interseptor",{"_index":252,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["invalid",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":105,"title":{},"body":{"classes/BookingsDTO.html":{},"classes/SlotsDTO.html":{}}}],["isnotempty()@isstring",{"_index":104,"title":{},"body":{"classes/BookingsDTO.html":{}}}],["isnotempty({message",{"_index":152,"title":{},"body":{"classes/DoctorsDTO.html":{},"classes/LocationsDTO.html":{},"classes/LoginDTO.html":{},"classes/SlotsDTO.html":{},"classes/StatusDTO.html":{},"classes/UsersDTO.html":{}}}],["join",{"_index":553,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["jwtauthguard",{"_index":174,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtauthguard)@post('/doctor')@apiokresponse({description",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["jwtpayload",{"_index":179,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtstartegy",{"_index":186,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":184,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":561,"title":{},"body":{"index.html":{}}}],["key",{"_index":142,"title":{},"body":{"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"entities/Users.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":567,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":542,"title":{},"body":{"index.html":{}}}],["list",{"_index":215,"title":{},"body":{"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"miscellaneous/variables.html":{}}}],["list_of_bookings",{"_index":410,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["list_of_locations",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["list_of_slots",{"_index":412,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["listoflocations",{"_index":206,"title":{},"body":{"controllers/LocationsController.html":{},"injectables/LocationsService.html":{}}}],["listofslots",{"_index":278,"title":{},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{}}}],["locaiton",{"_index":221,"title":{},"body":{"classes/LocationsDTO.html":{},"injectables/LocationsService.html":{}}}],["locaitons",{"_index":233,"title":{},"body":{"injectables/LocationsService.html":{}}}],["location",{"_index":137,"title":{},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"injectables/LocationsService.html":{},"miscellaneous/variables.html":{}}}],["locations",{"_index":94,"title":{"entities/Locations.html":{}},"body":{"controllers/BookingsController.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"injectables/LocationsService.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations.slots",{"_index":269,"title":{},"body":{"entities/Slots.html":{}}}],["locations_added",{"_index":209,"title":{},"body":{"controllers/LocationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_added_id",{"_index":413,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_fetched_success",{"_index":212,"title":{},"body":{"controllers/LocationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_id_notfound",{"_index":213,"title":{},"body":{"controllers/LocationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_not_found",{"_index":210,"title":{},"body":{"controllers/LocationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_not_sold",{"_index":414,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_notfound_id",{"_index":415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_sold",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locations_status_success",{"_index":417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationscontroller",{"_index":203,"title":{"controllers/LocationsController.html":{}},"body":{"controllers/LocationsController.html":{},"modules/LocationsModule.html":{},"coverage.html":{}}}],["locationsdto",{"_index":208,"title":{"classes/LocationsDTO.html":{}},"body":{"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"injectables/LocationsService.html":{},"coverage.html":{}}}],["locationsmodule",{"_index":33,"title":{"modules/LocationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationsModule.html":{},"modules.html":{},"overview.html":{}}}],["locationsrepository",{"_index":226,"title":{"classes/LocationsRepository.html":{}},"body":{"classes/LocationsRepository.html":{},"injectables/LocationsService.html":{},"coverage.html":{}}}],["locationsservice",{"_index":224,"title":{"injectables/LocationsService.html":{}},"body":{"modules/LocationsModule.html":{},"injectables/LocationsService.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":115,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"injectables/UsersService.html":{}}}],["logger(bookingsservice.name",{"_index":123,"title":{},"body":{"injectables/BookingsService.html":{}}}],["logger(locationsservice.name",{"_index":234,"title":{},"body":{"injectables/LocationsService.html":{}}}],["logger(slotsservice.name",{"_index":324,"title":{},"body":{"injectables/SlotsService.html":{}}}],["logger(usersservice.name",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["login",{"_index":237,"title":{},"body":{"classes/LoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["login(logindto",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["logindto",{"_index":235,"title":{"classes/LoginDTO.html":{}},"body":{"classes/LoginDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["manager",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["manytoone(undefined",{"_index":69,"title":{},"body":{"entities/Bookings.html":{},"entities/Slots.html":{}}}],["matching",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"modules/BookingsModule.html":{},"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"classes/DoctorRepository.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"modules/LocationsModule.html":{},"classes/LocationsRepository.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"modules/SlotsModule.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["message",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["metadata",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SlotsController.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":496,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":541,"title":{},"body":{"index.html":{}}}],["mode",{"_index":531,"title":{},"body":{"index.html":{}}}],["module",{"_index":25,"title":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules/LocationsModule.html":{},"modules/SlotsModule.html":{},"modules/UsersModule.html":{}},"body":{}}],["modules",{"_index":27,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules/LocationsModule.html":{},"modules/SlotsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":556,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":562,"title":{},"body":{"index.html":{}}}],["name",{"_index":96,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SlotsController.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["nest",{"_index":521,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":566,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":93,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":250,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["no_bookings_withuser",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["no_locations_withuser",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["no_slots_withuser",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":513,"title":{},"body":{"index.html":{}}}],["not_able_fetch",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_ablebookings_fetch",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_ableslots_fetch",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_found",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":525,"title":{},"body":{"index.html":{}}}],["number",{"_index":67,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{}}}],["observable",{"_index":254,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["one",{"_index":148,"title":{},"body":{"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Users.html":{}}}],["onetomany(undefined",{"_index":199,"title":{},"body":{"entities/Locations.html":{},"entities/Slots.html":{},"entities/Users.html":{}}}],["onetoone(undefined",{"_index":145,"title":{},"body":{"entities/Doctors.html":{},"entities/Users.html":{}}}],["open",{"_index":543,"title":{},"body":{"index.html":{}}}],["operation",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["optional",{"_index":97,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SlotsController.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules/LocationsModule.html":{},"modules/SlotsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":571,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":451,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":95,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SlotsController.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":238,"title":{},"body":{"classes/LoginDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["payload",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":182,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["phonenumber",{"_index":197,"title":{},"body":{"entities/Locations.html":{},"classes/LocationsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["please",{"_index":554,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":80,"title":{},"body":{"controllers/BookingsController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":141,"title":{},"body":{"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"entities/Users.html":{}}}],["primarygeneratedcolumn",{"_index":68,"title":{},"body":{"entities/Bookings.html":{},"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"entities/Users.html":{}}}],["production",{"_index":533,"title":{},"body":{"index.html":{}}}],["products",{"_index":307,"title":{},"body":{"classes/SlotsDTO.html":{}}}],["profile",{"_index":201,"title":{},"body":{"entities/Locations.html":{},"entities/Users.html":{}}}],["progressive",{"_index":512,"title":{},"body":{"index.html":{}}}],["project",{"_index":545,"title":{},"body":{"index.html":{}}}],["promise",{"_index":98,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SlotsController.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":54,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"injectables/BookingsService.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"interfaces/JwtPayload.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules/LocationsModule.html":{},"modules/SlotsModule.html":{},"modules/UsersModule.html":{}}}],["query",{"_index":318,"title":{},"body":{"classes/SlotsRepository.html":{}}}],["rating",{"_index":138,"title":{},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{}}}],["read",{"_index":555,"title":{},"body":{"index.html":{}}}],["reason",{"_index":58,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{}}}],["reflect",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":264,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":100,"title":{},"body":{"controllers/BookingsController.html":{},"classes/DoctorsDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["register(one",{"_index":202,"title":{},"body":{"entities/Locations.html":{},"entities/Users.html":{}}}],["register(userdto",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(users",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["registerdoctor",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["registerdoctor(doctor",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["registerdoctor(doctordto",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["registered",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["registration",{"_index":230,"title":{},"body":{"injectables/LocationsService.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["registred",{"_index":157,"title":{},"body":{"classes/DoctorsDTO.html":{}}}],["reigstered",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["reigstration",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["relaiton",{"_index":220,"title":{},"body":{"classes/LocationsDTO.html":{},"classes/UsersDTO.html":{}}}],["relation",{"_index":71,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"entities/Locations.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["relations",{"_index":306,"title":{},"body":{"classes/SlotsDTO.html":{}}}],["repository",{"_index":112,"title":{},"body":{"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"classes/DoctorRepository.html":{},"classes/LocationsRepository.html":{},"classes/SlotsRepository.html":{},"classes/UsersRepository.html":{},"index.html":{}}}],["required",{"_index":243,"title":{},"body":{"classes/LoginDTO.html":{},"classes/StatusDTO.html":{}}}],["required'})@isemail({message",{"_index":239,"title":{},"body":{"classes/LoginDTO.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules/LocationsModule.html":{},"modules/SlotsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":256,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["responseinterceptor",{"_index":244,"title":{"injectables/ResponseInterceptor.html":{}},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["results",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"modules/BookingsModule.html":{},"classes/BookingsRepository.html":{},"injectables/BookingsService.html":{},"classes/DoctorRepository.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"modules/LocationsModule.html":{},"classes/LocationsRepository.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"modules/SlotsModule.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/LocationsController.html":{},"injectables/LocationsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SlotsController.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":329,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.doctor)@useguards(rolesguard",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles_key",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":258,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":528,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":517,"title":{},"body":{"index.html":{}}}],["server",{"_index":518,"title":{},"body":{"index.html":{}}}],["setmetadata(roles_key",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shouldn't",{"_index":153,"title":{},"body":{"classes/DoctorsDTO.html":{}}}],["side",{"_index":519,"title":{},"body":{"index.html":{}}}],["slot",{"_index":302,"title":{},"body":{"controllers/SlotsController.html":{}}}],["slots",{"_index":59,"title":{"entities/Slots.html":{}},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"injectables/SlotsService.html":{},"entities/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots.bookings",{"_index":70,"title":{},"body":{"entities/Bookings.html":{}}}],["slots.locations",{"_index":200,"title":{},"body":{"entities/Locations.html":{}}}],["slots.users",{"_index":337,"title":{},"body":{"entities/Users.html":{}}}],["slots_added",{"_index":282,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_added_id",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_fetched_success",{"_index":291,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_id_notfound",{"_index":292,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_not_found",{"_index":283,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_not_sold",{"_index":298,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_notfound_id",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_sold",{"_index":297,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slots_status_success",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slotscontroller",{"_index":275,"title":{"controllers/SlotsController.html":{}},"body":{"controllers/SlotsController.html":{},"modules/SlotsModule.html":{},"coverage.html":{}}}],["slotsdto",{"_index":281,"title":{"classes/SlotsDTO.html":{}},"body":{"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"injectables/SlotsService.html":{},"coverage.html":{}}}],["slotsmodule",{"_index":34,"title":{"modules/SlotsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SlotsModule.html":{},"modules.html":{},"overview.html":{}}}],["slotsrepository",{"_index":313,"title":{"classes/SlotsRepository.html":{}},"body":{"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"coverage.html":{}}}],["slotss",{"_index":288,"title":{},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{}}}],["slotsservice",{"_index":311,"title":{"injectables/SlotsService.html":{}},"body":{"modules/SlotsModule.html":{},"injectables/SlotsService.html":{},"coverage.html":{},"overview.html":{}}}],["sold",{"_index":505,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":544,"title":{},"body":{"index.html":{}}}],["specialization",{"_index":139,"title":{},"body":{"entities/Doctors.html":{},"classes/DoctorsDTO.html":{}}}],["specific",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["sponsors",{"_index":548,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorators.ts",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":45,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/bookings/bookings.controller.ts",{"_index":79,"title":{},"body":{"controllers/BookingsController.html":{},"coverage.html":{}}}],["src/bookings/bookings.dto.ts",{"_index":103,"title":{},"body":{"classes/BookingsDTO.html":{},"coverage.html":{}}}],["src/bookings/bookings.entity.ts",{"_index":53,"title":{},"body":{"entities/Bookings.html":{},"coverage.html":{}}}],["src/bookings/bookings.module.ts",{"_index":109,"title":{},"body":{"modules/BookingsModule.html":{}}}],["src/bookings/bookings.repository.ts",{"_index":111,"title":{},"body":{"classes/BookingsRepository.html":{},"coverage.html":{}}}],["src/bookings/bookings.service.ts",{"_index":114,"title":{},"body":{"injectables/BookingsService.html":{},"coverage.html":{}}}],["src/bookings/status.enum.ts",{"_index":501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/exception",{"_index":160,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["src/common/interceptor/response.interceptor.ts",{"_index":245,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/locations/locations.controller.ts",{"_index":204,"title":{},"body":{"controllers/LocationsController.html":{},"coverage.html":{}}}],["src/locations/locations.dto.ts",{"_index":216,"title":{},"body":{"classes/LocationsDTO.html":{},"coverage.html":{}}}],["src/locations/locations.entity.ts",{"_index":193,"title":{},"body":{"entities/Locations.html":{},"coverage.html":{}}}],["src/locations/locations.module.ts",{"_index":225,"title":{},"body":{"modules/LocationsModule.html":{}}}],["src/locations/locations.repository.ts",{"_index":227,"title":{},"body":{"classes/LocationsRepository.html":{},"coverage.html":{}}}],["src/locations/locations.service.ts",{"_index":228,"title":{},"body":{"injectables/LocationsService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/slots/slots.controller.ts",{"_index":276,"title":{},"body":{"controllers/SlotsController.html":{},"coverage.html":{}}}],["src/slots/slots.dto.ts",{"_index":305,"title":{},"body":{"classes/SlotsDTO.html":{},"coverage.html":{}}}],["src/slots/slots.entity.ts",{"_index":267,"title":{},"body":{"entities/Slots.html":{},"coverage.html":{}}}],["src/slots/slots.module.ts",{"_index":312,"title":{},"body":{"modules/SlotsModule.html":{}}}],["src/slots/slots.repository.ts",{"_index":314,"title":{},"body":{"classes/SlotsRepository.html":{},"coverage.html":{}}}],["src/slots/slots.service.ts",{"_index":322,"title":{},"body":{"injectables/SlotsService.html":{},"coverage.html":{}}}],["src/slots/status.dto.ts",{"_index":325,"title":{},"body":{"classes/StatusDTO.html":{},"coverage.html":{}}}],["src/slots/status.enum.ts",{"_index":503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/doctors/doctors.dto.ts",{"_index":150,"title":{},"body":{"classes/DoctorsDTO.html":{},"coverage.html":{}}}],["src/users/doctors/doctors.entity.ts",{"_index":133,"title":{},"body":{"entities/Doctors.html":{},"coverage.html":{}}}],["src/users/doctors/doctors.repository.ts",{"_index":126,"title":{},"body":{"classes/DoctorRepository.html":{},"coverage.html":{}}}],["src/users/guards/jwt",{"_index":175,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/users/guards/roles.guard.ts",{"_index":260,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/users/jwt/jwt",{"_index":181,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/users/jwt/jwt.strategy.ts",{"_index":185,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/users/login.dto.ts",{"_index":236,"title":{},"body":{"classes/LoginDTO.html":{},"coverage.html":{}}}],["src/users/role.enum.ts",{"_index":500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/roles/roles.decorators.ts",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.dto.ts",{"_index":368,"title":{},"body":{"classes/UsersDTO.html":{},"coverage.html":{}}}],["src/users/users.entity.ts",{"_index":327,"title":{},"body":{"entities/Users.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":378,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.repository.ts",{"_index":380,"title":{},"body":{"classes/UsersRepository.html":{},"coverage.html":{}}}],["src/users/users.service.ts",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["ssn",{"_index":330,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["start",{"_index":529,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":532,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":534,"title":{},"body":{"index.html":{}}}],["started",{"_index":511,"title":{"index.html":{}},"body":{}}],["starter",{"_index":523,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":60,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{}}}],["statements",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["status",{"_index":61,"title":{},"body":{"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"controllers/LocationsController.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":255,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["statuscode,url,time",{"_index":173,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["statusdto",{"_index":296,"title":{"classes/StatusDTO.html":{}},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"coverage.html":{}}}],["statusdto})@patch(':id",{"_index":301,"title":{},"body":{"controllers/SlotsController.html":{}}}],["stautsdto",{"_index":303,"title":{},"body":{"controllers/SlotsController.html":{}}}],["stay",{"_index":558,"title":{},"body":{"index.html":{}}}],["store",{"_index":156,"title":{},"body":{"classes/DoctorsDTO.html":{},"classes/SlotsDTO.html":{}}}],["string",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"interfaces/JwtPayload.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"classes/LoginDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"miscellaneous/variables.html":{}}}],["succesful",{"_index":232,"title":{},"body":{"injectables/LocationsService.html":{}}}],["success",{"_index":289,"title":{},"body":{"controllers/SlotsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successful",{"_index":101,"title":{},"body":{"controllers/BookingsController.html":{},"injectables/BookingsService.html":{},"controllers/SlotsController.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":294,"title":{},"body":{"controllers/SlotsController.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":549,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":569,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["tabel",{"_index":308,"title":{},"body":{"classes/SlotsDTO.html":{}}}],["table",{"_index":158,"title":{},"body":{"classes/DoctorsDTO.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":537,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":540,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":539,"title":{},"body":{"index.html":{}}}],["tests",{"_index":536,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":547,"title":{},"body":{"index.html":{}}}],["tobooked",{"_index":321,"title":{},"body":{"classes/SlotsRepository.html":{}}}],["token",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["touch",{"_index":559,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":335,"title":{},"body":{"entities/Users.html":{}}}],["try",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":565,"title":{},"body":{"index.html":{}}}],["two",{"_index":504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":63,"title":{},"body":{"entities/Bookings.html":{},"controllers/BookingsController.html":{},"classes/BookingsDTO.html":{},"injectables/BookingsService.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"classes/ExceptionExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Locations.html":{},"controllers/LocationsController.html":{},"classes/LocationsDTO.html":{},"injectables/LocationsService.html":{},"classes/LoginDTO.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Slots.html":{},"controllers/SlotsController.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":131,"title":{},"body":{"classes/DoctorRepository.html":{},"classes/DoctorsDTO.html":{},"classes/LocationsRepository.html":{},"classes/SlotsRepository.html":{},"classes/UsersRepository.html":{},"dependencies.html":{}}}],["types/passport",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":522,"title":{},"body":{"index.html":{}}}],["ui",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["unable",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["unable_to_update",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unauthorized_exception",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"entities/Bookings.html":{},"entities/Users.html":{},"controllers/UsersController.html":{}}}],["undefined})@apibody({description",{"_index":299,"title":{},"body":{"controllers/SlotsController.html":{}}}],["undefined})@apiconflictresponse({description",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apiinternalservererrorresponse({description",{"_index":89,"title":{},"body":{"controllers/BookingsController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":87,"title":{},"body":{"controllers/BookingsController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["undefined})@get",{"_index":214,"title":{},"body":{"controllers/LocationsController.html":{},"controllers/SlotsController.html":{}}}],["undefined})@post",{"_index":91,"title":{},"body":{"controllers/BookingsController.html":{},"controllers/LocationsController.html":{},"controllers/SlotsController.html":{},"controllers/UsersController.html":{}}}],["undefined})@post('/login",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["unit",{"_index":535,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/SlotsRepository.html":{}}}],["update",{"_index":300,"title":{},"body":{"controllers/SlotsController.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateslots",{"_index":279,"title":{},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{}}}],["updateslots(id",{"_index":295,"title":{},"body":{"controllers/SlotsController.html":{},"injectables/SlotsService.html":{}}}],["used",{"_index":127,"title":{},"body":{"classes/DoctorRepository.html":{},"classes/ExceptionExceptionFilter.html":{},"classes/LocationsRepository.html":{},"classes/SlotsRepository.html":{},"classes/StatusDTO.html":{},"classes/UsersRepository.html":{},"miscellaneous/enumerations.html":{}}}],["user",{"_index":273,"title":{},"body":{"entities/Slots.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user_id_notfound",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_login",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_register",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_registered",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_with_bookingsdata",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_with_locationsdata",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_with_slotssdata",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["userid",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":62,"title":{"entities/Users.html":{}},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"classes/SlotsRepository.html":{},"classes/StatusDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.bookings",{"_index":77,"title":{},"body":{"entities/Bookings.html":{}}}],["users.doctor)@joincolumn",{"_index":146,"title":{},"body":{"entities/Doctors.html":{}}}],["users.slots",{"_index":272,"title":{},"body":{"entities/Slots.html":{}}}],["userscontroller",{"_index":338,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersdto",{"_index":356,"title":{"classes/UsersDTO.html":{}},"body":{"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":35,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":189,"title":{"classes/UsersRepository.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/SlotsService.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersservice",{"_index":377,"title":{"injectables/UsersService.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":130,"title":{},"body":{"classes/DoctorRepository.html":{},"classes/DoctorsDTO.html":{},"classes/LocationsRepository.html":{},"controllers/SlotsController.html":{},"classes/SlotsRepository.html":{},"injectables/SlotsService.html":{},"controllers/UsersController.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["valid",{"_index":241,"title":{},"body":{"classes/LoginDTO.html":{}}}],["validate",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":66,"title":{},"body":{"entities/Bookings.html":{},"classes/BookingsDTO.html":{},"injectables/BookingsService.html":{},"entities/Doctors.html":{},"classes/DoctorsDTO.html":{},"interfaces/JwtPayload.html":{},"entities/Locations.html":{},"classes/LocationsDTO.html":{},"injectables/LocationsService.html":{},"entities/Slots.html":{},"classes/SlotsDTO.html":{},"injectables/SlotsService.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":576,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["visit",{"_index":198,"title":{},"body":{"entities/Locations.html":{},"classes/LocationsDTO.html":{}}}],["watch",{"_index":530,"title":{},"body":{"index.html":{}}}],["website",{"_index":563,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":552,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingsModule.html":{},"modules/LocationsModule.html":{},"modules/SlotsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                app Controller includes handler fro CRUD operation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n\n\n            \n                \n                    Fetching the static data\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        string\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBookingsModule\n\nBookingsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookingsModule->AppModule\n\n\n\n\n\nLocationsModule\n\nLocationsModule\n\nAppModule -->\n\nLocationsModule->AppModule\n\n\n\n\n\nSlotsModule\n\nSlotsModule\n\nAppModule -->\n\nSlotsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BookingsModule\n                        \n                        \n                            LocationsModule\n                        \n                        \n                            SlotsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It will insert/update/delete/retrieve app information in the database/repository\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n\n\n            \n                \n                    Fetch the data\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Bookings.html":{"url":"entities/Bookings.html","title":"entity - Bookings","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Bookings\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bookings/bookings.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Bookings Entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                endTime\n                            \n                            \n                                id\n                            \n                            \n                                reason\n                            \n                            \n                                slots\n                            \n                            \n                                startTime\n                            \n                            \n                                status\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slots\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Slots\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, slots => slots.bookings)\n                        \n                    \n                \n\n            \n                \n                    Relation between slots and bookings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Status, default: undefined})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, users => users.bookings)\n                        \n                    \n                \n\n            \n                \n                    Relation between users and bookings\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookingsController.html":{"url":"controllers/BookingsController.html","title":"controller - BookingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookingsController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bookings/bookings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bookings\n            \n\n\n            \n                Description\n            \n            \n                Controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewBookings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewBookings\n                        \n                    \n                \n            \n            \n                \naddNewBookings(Bookings: BookingsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: BOOKINGS_ADDED, status: undefined})@ApiNotFoundResponse({description: BOOKINGS_NOT_FOUND, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_FETCH_BOOKINGS, status: undefined})@Post()\n                \n            \n\n\n\n            \n                \n                    Create a new locations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Bookings\n                                    \n                                                BookingsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        booking register successful\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookingsDTO.html":{"url":"classes/BookingsDTO.html","title":"class - BookingsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookingsDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bookings/bookings.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                bookingsDTO\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                endTime\n                            \n                            \n                                id\n                            \n                            \n                                reason\n                            \n                            \n                                slots\n                            \n                            \n                                startTime\n                            \n                            \n                                status\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n\n            \n                \n                     accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slots\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Slots\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n\n            \n                \n                    Relation between slots and bookings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n\n            \n                \n                    Relation between users and slots\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingsModule.html":{"url":"modules/BookingsModule.html","title":"module - BookingsModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BookingsModule\n\n\n\ncluster_BookingsModule_providers\n\n\n\n\nBookingsService\n\nBookingsService\n\n\n\nBookingsModule\n\nBookingsModule\n\nBookingsModule -->\n\nBookingsService->BookingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bookings/bookings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookingsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookingsRepository.html":{"url":"classes/BookingsRepository.html","title":"class - BookingsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookingsRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bookings/bookings.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Booking repository\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingsService.html":{"url":"injectables/BookingsService.html","title":"injectable - BookingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bookings/bookings.service.ts\n        \n\n\n            \n                Description\n            \n            \n                BookingsService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewBookings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookingsRepo: BookingsRepository)\n                    \n                \n\n                \n                    \n                            Dependency Injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bookingsRepo\n                                                  \n                                                        \n                                                                        BookingsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                bookings Repository\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNewBookings\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewBookings(bookings: BookingsDTO)\n                \n            \n\n\n\n\n            \n                \n                    booking a appointment\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookings\n                                    \n                                                BookingsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        booking successful\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BookingsService.name)\n                    \n                \n\n            \n                \n                    logger instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoctorRepository.html":{"url":"classes/DoctorRepository.html","title":"class - DoctorRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoctorRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/doctors/doctors.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                used to coonect with database using typeORM\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Doctors.html":{"url":"entities/Doctors.html","title":"entity - Doctors","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Doctors\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/doctors/doctors.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Doctors entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consultationFee\n                            \n                            \n                                description\n                            \n                            \n                                education\n                            \n                            \n                                experience\n                            \n                            \n                                id\n                            \n                            \n                                location\n                            \n                            \n                                rating\n                            \n                            \n                                specialization\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consultationFee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the integer value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        education\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    primary key and its auto generated by database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the integer value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specialization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, users => users.doctor)@JoinColumn()\n                        \n                    \n                \n\n            \n                \n                    Relation between users and doctors(one to one)\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoctorsDTO.html":{"url":"classes/DoctorsDTO.html","title":"class - DoctorsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoctorsDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/doctors/doctors.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Doctors dto class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consultationFee\n                            \n                            \n                                description\n                            \n                            \n                                education\n                            \n                            \n                                experience\n                            \n                            \n                                id\n                            \n                            \n                                location\n                            \n                            \n                                rating\n                            \n                            \n                                specialization\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consultationFee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: ConsultationFee shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Description shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        education\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Education shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Experience shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    auto generate number using typeOrm\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Location shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Rating shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    accepts only number\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specialization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Specialization shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: Users shouldn't be empty})\n                        \n                    \n                \n\n            \n                \n                    Register column for store the registred in the table\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionExceptionFilter.html":{"url":"classes/ExceptionExceptionFilter.html","title":"class - ExceptionExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionExceptionFilter\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exception-filter/exception-filter.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Used to handled all the exceptions\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n\n\n            \n                \n                    Exception Filter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        statusCode,url,time\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/guards/jwt-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                JWtAuthguard for authorization\n\n            \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt/jwt-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                accepts the string value\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emailId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emailId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    accepts the string value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                For Jwtstartegy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository)\n                    \n                \n\n                \n                    \n                            Dependency Injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n\n\n            \n                \n                    Validate the Jwtpayload\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Locations.html":{"url":"entities/Locations.html","title":"entity - Locations","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Locations\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locations/locations.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Locations entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityName\n                            \n                            \n                                contactPerson\n                            \n                            \n                                hospital\n                            \n                            \n                                id\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                slots\n                            \n                            \n                                visit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hospital\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    primary key and its auto generated by database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the number value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slots\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Slots[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, slots => slots.locations)\n                        \n                    \n                \n\n            \n                \n                    Relation between profile and register(one to one)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationsController.html":{"url":"controllers/LocationsController.html","title":"controller - LocationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationsController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locations/locations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                locations\n            \n\n\n            \n                Description\n            \n            \n                locations Controller includes handler fro CRUD operation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewLocations\n                            \n                            \n                                listOfLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewLocations\n                        \n                    \n                \n            \n            \n                \naddNewLocations(locations: LocationsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: LOCATIONS_ADDED, status: undefined})@ApiNotFoundResponse({description: LOCATIONS_NOT_FOUND, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_FETCH_LOCATIONS, status: undefined})@Post()\n                \n            \n\n\n\n            \n                \n                    Create a new locations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locations\n                                    \n                                                LocationsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listOfLocations\n                        \n                    \n                \n            \n            \n                \nlistOfLocations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: LOCATIONS_FETCHED_SUCCESS, status: undefined})@ApiNotFoundResponse({description: LOCATIONS_ID_NOTFOUND, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_FETCH_LOCATIONS, status: undefined})@Get()\n                \n            \n\n\n\n            \n                \n                    Fetch all the locations\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        list of locations\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocationsDTO.html":{"url":"classes/LocationsDTO.html","title":"class - LocationsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocationsDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locations/locations.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                locations dto class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityName\n                            \n                            \n                                contactPerson\n                            \n                            \n                                hospital\n                            \n                            \n                                id\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                slots\n                            \n                            \n                                visit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'cityName is not empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender  is not empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hospital\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Hospital cant be empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    number autogenerated\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'phoneNumber is not empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slots\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Slots[]\n\n                    \n                \n\n            \n                \n                    relaiton between slots and locaiton\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'visit cant be empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationsModule.html":{"url":"modules/LocationsModule.html","title":"module - LocationsModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LocationsModule\n\n\n\ncluster_LocationsModule_providers\n\n\n\n\nLocationsService\n\nLocationsService\n\n\n\nLocationsModule\n\nLocationsModule\n\nLocationsModule -->\n\nLocationsService->LocationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/locations/locations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocationsRepository.html":{"url":"classes/LocationsRepository.html","title":"class - LocationsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocationsRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locations/locations.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                used to coonect with database using typeORM\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationsService.html":{"url":"injectables/LocationsService.html","title":"injectable - LocationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/locations/locations.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It will insert/update/delete/retrieve locations information in the database/repository\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewLocations\n                            \n                            \n                                    Async\n                                listOfLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locationsRepository: LocationsRepository)\n                    \n                \n\n                \n                    \n                            Dependency Injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locationsRepository\n                                                  \n                                                        \n                                                                        LocationsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNewLocations\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewLocations(locations: LocationsDTO)\n                \n            \n\n\n\n\n            \n                \n                    location registration\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locations\n                                    \n                                                LocationsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        locaiton added succesful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listOfLocations\n                        \n                    \n                \n            \n            \n                \n                    \n                    listOfLocations()\n                \n            \n\n\n\n\n            \n                \n                    Fetching the data\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        fetch list of locaitons\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LocationsService.name)\n                    \n                \n\n            \n                \n                    Logger instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDTO.html":{"url":"classes/LoginDTO.html","title":"class - LoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/login.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                login dto\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailId\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'EmailId is required'})@IsEmail({message: 'Enter valid email id'})\n                        \n                    \n                \n\n            \n                \n                    accepts string\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})\n                        \n                    \n                \n\n            \n                \n                    accepts string\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptor.html":{"url":"injectables/ResponseInterceptor.html","title":"injectable - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptor/response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n\n\n            \n                \n                    Interseptor\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        data, statuscode, response\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/users/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Implements canactive\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n\n                \n                    \n                            Dependency Injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n\n\n            \n                \n                    CanActive\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Slots.html":{"url":"entities/Slots.html","title":"entity - Slots","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Slots\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/slots/slots.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Slots entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookings\n                            \n                            \n                                endTime\n                            \n                            \n                                hospital\n                            \n                            \n                                id\n                            \n                            \n                                locations\n                            \n                            \n                                startTime\n                            \n                            \n                                status\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookings[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, bookings => bookings.slots)\n                        \n                    \n                \n\n            \n                \n                    Relation between booking\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the number value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hospital\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    primary key and its auto generated by database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Locations\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, locations => locations.slots)\n                        \n                    \n                \n\n            \n                \n                    Relation between slots and locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 'Available'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, users => users.slots)\n                        \n                    \n                \n\n            \n                \n                    Relation between user and books\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SlotsController.html":{"url":"controllers/SlotsController.html","title":"controller - SlotsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SlotsController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/slots/slots.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                slots\n            \n\n\n            \n                Description\n            \n            \n                slots Controller includes handler fro CRUD operation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewSlots\n                            \n                            \n                                listOfSlots\n                            \n                            \n                                updateSlots\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNewSlots\n                        \n                    \n                \n            \n            \n                \naddNewSlots(slotss: SlotsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: SLOTS_ADDED, status: undefined})@ApiNotFoundResponse({description: SLOTS_NOT_FOUND, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_FETCH_SLOTS, status: undefined})@Post()\n                \n            \n\n\n\n            \n                \n                    add slots exisiting doctor\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slotss\n                                    \n                                                SlotsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success or failure\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listOfSlots\n                        \n                    \n                \n            \n            \n                \nlistOfSlots()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: SLOTS_FETCHED_SUCCESS, status: undefined})@ApiNotFoundResponse({description: SLOTS_ID_NOTFOUND, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_FETCH_SLOTS, status: undefined})@Get()\n                \n            \n\n\n\n            \n                \n                    slots fetched successfully\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        success or failure\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSlots\n                        \n                    \n                \n            \n            \n                \nupdateSlots(id: number, statusDTO: StatusDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: SLOTS_SOLD, status: undefined})@ApiNotFoundResponse({description: SLOTS_NOT_SOLD, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_FETCH_SLOTS, status: undefined})@ApiBody({description: 'Update Status', type: StatusDTO})@Patch(':id')\n                \n            \n\n\n\n            \n                \n                    update Booking\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        using slot id\n\n                                    \n                                \n                                \n                                    statusDTO\n                                    \n                                                StatusDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        stautsDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        status changed successful\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlotsDTO.html":{"url":"classes/SlotsDTO.html","title":"class - SlotsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlotsDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/slots/slots.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                locations dto class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookings\n                            \n                            \n                                endTime\n                            \n                            \n                                hospital\n                            \n                            \n                                id\n                            \n                            \n                                locations\n                            \n                            \n                                startTime\n                            \n                            \n                                status\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookings[]\n\n                    \n                \n\n            \n                \n                    Relations between bookings and slots\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'endTime is not empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hospital\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'hospital is not empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    number auto generated\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Locations\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n\n            \n                \n                    Relation between slots and locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'startTime  is not empty'})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'users cant be empty'})\n                        \n                    \n                \n\n            \n                \n                    User column for store products id in the tabel\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlotsModule.html":{"url":"modules/SlotsModule.html","title":"module - SlotsModule","body":"\n                   \n\n\n\n\n    Modules\n    SlotsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SlotsModule\n\n\n\ncluster_SlotsModule_providers\n\n\n\n\nSlotsService\n\nSlotsService\n\n\n\nSlotsModule\n\nSlotsModule\n\nSlotsModule -->\n\nSlotsService->SlotsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/slots/slots.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SlotsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SlotsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SlotsRepository.html":{"url":"classes/SlotsRepository.html","title":"class - SlotsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SlotsRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/slots/slots.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                used to connect with database using typeORM\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(id: number, users: Users)\n                \n            \n\n\n\n\n            \n                \n                    Used query builder to update the status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        using user id\n\n                                    \n                                \n                                \n                                    users\n                                    \n                                                Users\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        changes the status tobooked\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SlotsService.html":{"url":"injectables/SlotsService.html","title":"injectable - SlotsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SlotsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/slots/slots.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It will insert/update/delete/retrieve books information in the database/repository\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewSlots\n                            \n                            \n                                    Async\n                                listOfSlots\n                            \n                            \n                                    Async\n                                updateSlots\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(slotsRepository: SlotsRepository, usersRepository: UsersRepository)\n                    \n                \n\n                \n                    \n                            Dependency Injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        slotsRepository\n                                                  \n                                                        \n                                                                        SlotsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNewSlots\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewSlots(slotss: SlotsDTO)\n                \n            \n\n\n\n\n            \n                \n                    slots registration\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slotss\n                                    \n                                                SlotsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        added successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listOfSlots\n                        \n                    \n                \n            \n            \n                \n                    \n                    listOfSlots()\n                \n            \n\n\n\n\n            \n                \n                    Fetching the slots data\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        slots fetch successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSlots\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSlots(id: number, statusDTO: StatusDTO)\n                \n            \n\n\n\n\n            \n                \n                    Update the status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        using id\n\n                                    \n                                \n                                \n                                    statusDTO\n                                    \n                                                StatusDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        statusdto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        status changed successful\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SlotsService.name)\n                    \n                \n\n            \n                \n                    Logger Instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusDTO.html":{"url":"classes/StatusDTO.html","title":"class - StatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/slots/status.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                It is used to change the Status\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Users should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    User should not be empty\nto change the status user Required\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Users.html":{"url":"entities/Users.html","title":"entity - Users","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Users\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                users entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                bookings\n                            \n                            \n                                date\n                            \n                            \n                                doctor\n                            \n                            \n                                emailId\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                role\n                            \n                            \n                                slots\n                            \n                            \n                                ssn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookings[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, bookings => bookings.users)\n                        \n                    \n                \n\n            \n                \n                    Relation between bookings and users\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doctor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Doctors\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, doctor => doctor.users)\n                        \n                    \n                \n\n            \n                \n                    Relation between profile and register(one to one)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    primary key and its auto generated by database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    accepts the integer value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, default: undefined})\n                        \n                    \n                \n\n            \n                \n                    const value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slots\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Slots[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, slots => slots.users)\n                        \n                    \n                \n\n            \n                \n                    Relation between books and user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ssn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n\n            \n                \n                    accepts the integer value\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n            \n                Description\n            \n            \n                Users Controller includes handler fro CRUD operation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getmedicalHistory\n                            \n                            \n                                logIn\n                            \n                            \n                                register\n                            \n                            \n                                registerDoctor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getmedicalHistory\n                        \n                    \n                \n            \n            \n                \ngetmedicalHistory(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Medical details fetch successful', status: undefined})@ApiConflictResponse({description: 'Unable to fetch medical history', status: undefined})\n                \n            \n\n\n\n            \n                \n                    fetch medical detials\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        using id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        success or failure\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(loginDTO: LoginDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: USER_LOGIN, status: undefined})@ApiNotFoundResponse({description: NOT_FOUND, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_TO_FETCH, status: undefined})@Post('/login')\n                \n            \n\n\n\n            \n                \n                    user login successful\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDTO\n                                    \n                                                LoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success or failure\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userDTO: UsersDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: USER_REGISTERED, status: undefined})@ApiNotFoundResponse({description: NOT_FOUND, status: undefined})@ApiInternalServerErrorResponse({description: FAILED_TO_FETCH, status: undefined})@ApiConflictResponse({description: CONFLICT_EXCEPTION, status: undefined})@Post()\n                \n            \n\n\n\n            \n                \n                    Register for user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDTO\n                                    \n                                                UsersDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success or failure message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDoctor\n                        \n                    \n                \n            \n            \n                \nregisterDoctor(doctorDTO: DoctorsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.Doctor)@UseGuards(RolesGuard, JwtAuthGuard)@Post('/doctor')@ApiOkResponse({description: 'Doctor reigstered successful', status: undefined})@ApiConflictResponse({description: 'Doctor already exists', status: undefined})\n                \n            \n\n\n\n            \n                \n                    doctor registration\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    doctorDTO\n                                    \n                                                DoctorsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        doctorDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success or failure\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersDTO.html":{"url":"classes/UsersDTO.html","title":"class - UsersDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                User dto class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                bookings\n                            \n                            \n                                date\n                            \n                            \n                                doctor\n                            \n                            \n                                emailId\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                role\n                            \n                            \n                                ssn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age is not empty'})@IsNumber()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bookings[]\n\n                    \n                \n\n            \n                \n                    user to booking relation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n\n            \n                \n                    auto generated Date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doctor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Doctors\n\n                    \n                \n\n            \n                \n                    user to doctor relaiton\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email cant be empty'})@IsEmail()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender is not empty'})@IsString()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    number auto generated\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is not empty'})@IsString()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'password cant be empty'})@IsString()\n                        \n                    \n                \n\n            \n                \n                    accepts the string value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Phonenumber cant be empty'})@IsNumber()\n                        \n                    \n                \n\n            \n                \n                    accepts the interger value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n\n            \n                \n                    adding new column by default\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ssn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'SSN cant be empty'})@IsNumber()\n                        \n                    \n                \n\n            \n                \n                    accepts the interger value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nUsersModule\n\nUsersModule\n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersRepository.html":{"url":"classes/UsersRepository.html","title":"class - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                used to coonect with database using typeORM\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                It will insert/update/delete/retrieve users information in the database/repository\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getmedicalHistory\n                            \n                            \n                                    Async\n                                logIn\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                registerDoctor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository, doctorRepository: DoctorRepository, jwtService: JwtService)\n                    \n                \n\n                \n                    \n                            Dependency Injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorRepository\n                                                  \n                                                        \n                                                                        DoctorRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getmedicalHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getmedicalHistory(id: number)\n                \n            \n\n\n\n\n            \n                \n                    specific user medical history\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        using id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        medical history\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    logIn(loginDTO: LoginDTO)\n                \n            \n\n\n\n\n            \n                \n                    Login user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDTO\n                                    \n                                                LoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        generate token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(users: UsersDTO)\n                \n            \n\n\n\n\n            \n                \n                    user reigstration\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    users\n                                    \n                                                UsersDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success or failre\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerDoctor\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDoctor(doctor: DoctorsDTO)\n                \n            \n\n\n\n\n            \n                \n                    doctor registration\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    doctor\n                                    \n                                                DoctorsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        doctorDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        doctor registered successful\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersService.name)\n                    \n                \n\n            \n                \n                    Logger Instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_ADDED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_ADDED_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_FETCHED_SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_ID_NOTFOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_NOT_SOLD\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_NOTFOUND_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_SOLD\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            BOOKINGS_STATUS_SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            CONFLICT_EXCEPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            FAILED_FETCH_BOOKINGS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            FAILED_FETCH_LOCATIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            FAILED_FETCH_SLOTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            FAILED_FETCH_USER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            FAILED_TO_FETCH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            FETCH_ID_SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            FETCHED_SUCCESSFULLY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            INTERNAL_SERVER_ERROR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LIST_OF_BOOKINGS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LIST_OF_LOCATIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LIST_OF_SLOTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_ADDED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_ADDED_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_FETCHED_SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_ID_NOTFOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_NOT_SOLD\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_NOTFOUND_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_SOLD\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            LOCATIONS_STATUS_SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            NO_BOOKINGS_WITHUSER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            NO_LOCATIONS_WITHUSER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            NO_SLOTS_WITHUSER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            NOT_ABLE_FETCH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            NOT_ABLEBOOKINGS_FETCH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            NOT_ABLESLOTS_FETCH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_ADDED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_ADDED_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_FETCHED_SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_ID_NOTFOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_NOT_SOLD\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_NOTFOUND_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_SOLD\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            SLOTS_STATUS_SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            UNABLE_TO_UPDATE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            UNAUTHORIZED_EXCEPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            USER_ID_NOTFOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            USER_LOGIN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            USER_REGISTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            USER_REGISTERED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            USER_WITH_BOOKINGSDATA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            USER_WITH_LOCATIONSDATA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                constant.ts\n            \n            variable\n            USER_WITH_SLOTSSDATA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/bookings/bookings.controller.ts\n            \n            controller\n            BookingsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/bookings/bookings.dto.ts\n            \n            class\n            BookingsDTO\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/bookings/bookings.entity.ts\n            \n            entity\n            Bookings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/bookings/bookings.repository.ts\n            \n            class\n            BookingsRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/bookings/bookings.service.ts\n            \n            injectable\n            BookingsService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/exception-filter/exception-filter.filter.ts\n            \n            class\n            ExceptionExceptionFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/common/interceptor/response.interceptor.ts\n            \n            injectable\n            ResponseInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/locations/locations.controller.ts\n            \n            controller\n            LocationsController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/locations/locations.dto.ts\n            \n            class\n            LocationsDTO\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/locations/locations.entity.ts\n            \n            entity\n            Locations\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/locations/locations.repository.ts\n            \n            class\n            LocationsRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/locations/locations.service.ts\n            \n            injectable\n            LocationsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/slots/slots.controller.ts\n            \n            controller\n            SlotsController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/slots/slots.dto.ts\n            \n            class\n            SlotsDTO\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/slots/slots.entity.ts\n            \n            entity\n            Slots\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/slots/slots.repository.ts\n            \n            class\n            SlotsRepository\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/slots/slots.service.ts\n            \n            injectable\n            SlotsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/slots/status.dto.ts\n            \n            class\n            StatusDTO\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/users/doctors/doctors.dto.ts\n            \n            class\n            DoctorsDTO\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/users/doctors/doctors.entity.ts\n            \n            entity\n            Doctors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/doctors/doctors.repository.ts\n            \n            class\n            DoctorRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/jwt/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/users/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/login.dto.ts\n            \n            class\n            LoginDTO\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/roles/roles.decorators.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/roles/roles.decorators.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/users/users.dto.ts\n            \n            class\n            UsersDTO\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/users/users.entity.ts\n            \n            entity\n            Users\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.repository.ts\n            \n            class\n            UsersRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @types/passport-jwt : ^3.0.6\n        \n            bcrypt : ^5.0.1\n        \n            bcryptjs : ^2.4.3\n        \n            cache-manager : ^3.6.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            fastify-swagger : ^4.13.1\n        \n            mysql2 : ^2.3.3\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            Status   (src/.../status.enum.ts)\n                        \n                        \n                            Status   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Doctor\n                            \n                        \n                        \n                            \n                                Value : doctor\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n    src/bookings/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 Booked\n                            \n                        \n                        \n                            \n                                Value : booked\n                            \n                        \n            \n        \n\n    src/slots/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            enum type used with name status\nTwo type of status are available\n\n                        \n                    \n                        \n                            \n                                 available\n                            \n                        \n                        \n                            \n                                Value : Available\n                            \n                        \n                        \n                            \n                                 sold\n                            \n                        \n                        \n                            \n                                Value : Booked\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    bootstarp of application\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlotsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BookingsModule\n\n\n\ncluster_BookingsModule_providers\n\n\n\ncluster_LocationsModule\n\n\n\ncluster_LocationsModule_providers\n\n\n\ncluster_SlotsModule\n\n\n\ncluster_SlotsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nBookingsModule\n\nBookingsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookingsModule->AppModule\n\n\n\n\n\nLocationsModule\n\nLocationsModule\n\nAppModule -->\n\nLocationsModule->AppModule\n\n\n\n\n\nSlotsModule\n\nSlotsModule\n\nAppModule -->\n\nSlotsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBookingsService\n\nBookingsService\n\nBookingsModule -->\n\nBookingsService->BookingsModule\n\n\n\n\n\nLocationsService\n\nLocationsService\n\nLocationsModule -->\n\nLocationsService->LocationsModule\n\n\n\n\n\nSlotsService\n\nSlotsService\n\nSlotsModule -->\n\nSlotsService->SlotsModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BOOKINGS_ADDED   (constant.ts)\n                        \n                        \n                            BOOKINGS_ADDED_ID   (constant.ts)\n                        \n                        \n                            BOOKINGS_FETCHED_SUCCESS   (constant.ts)\n                        \n                        \n                            BOOKINGS_ID_NOTFOUND   (constant.ts)\n                        \n                        \n                            BOOKINGS_NOT_FOUND   (constant.ts)\n                        \n                        \n                            BOOKINGS_NOT_SOLD   (constant.ts)\n                        \n                        \n                            BOOKINGS_NOTFOUND_ID   (constant.ts)\n                        \n                        \n                            BOOKINGS_SOLD   (constant.ts)\n                        \n                        \n                            BOOKINGS_STATUS_SUCCESS   (constant.ts)\n                        \n                        \n                            CONFLICT_EXCEPTION   (constant.ts)\n                        \n                        \n                            FAILED_FETCH_BOOKINGS   (constant.ts)\n                        \n                        \n                            FAILED_FETCH_LOCATIONS   (constant.ts)\n                        \n                        \n                            FAILED_FETCH_SLOTS   (constant.ts)\n                        \n                        \n                            FAILED_FETCH_USER   (constant.ts)\n                        \n                        \n                            FAILED_TO_FETCH   (constant.ts)\n                        \n                        \n                            FETCH_ID_SUCCESS   (constant.ts)\n                        \n                        \n                            FETCHED_SUCCESSFULLY   (constant.ts)\n                        \n                        \n                            INTERNAL_SERVER_ERROR   (constant.ts)\n                        \n                        \n                            LIST_OF_BOOKINGS   (constant.ts)\n                        \n                        \n                            LIST_OF_LOCATIONS   (constant.ts)\n                        \n                        \n                            LIST_OF_SLOTS   (constant.ts)\n                        \n                        \n                            LOCATIONS_ADDED   (constant.ts)\n                        \n                        \n                            LOCATIONS_ADDED_ID   (constant.ts)\n                        \n                        \n                            LOCATIONS_FETCHED_SUCCESS   (constant.ts)\n                        \n                        \n                            LOCATIONS_ID_NOTFOUND   (constant.ts)\n                        \n                        \n                            LOCATIONS_NOT_FOUND   (constant.ts)\n                        \n                        \n                            LOCATIONS_NOT_SOLD   (constant.ts)\n                        \n                        \n                            LOCATIONS_NOTFOUND_ID   (constant.ts)\n                        \n                        \n                            LOCATIONS_SOLD   (constant.ts)\n                        \n                        \n                            LOCATIONS_STATUS_SUCCESS   (constant.ts)\n                        \n                        \n                            NO_BOOKINGS_WITHUSER   (constant.ts)\n                        \n                        \n                            NO_LOCATIONS_WITHUSER   (constant.ts)\n                        \n                        \n                            NO_SLOTS_WITHUSER   (constant.ts)\n                        \n                        \n                            NOT_ABLE_FETCH   (constant.ts)\n                        \n                        \n                            NOT_ABLEBOOKINGS_FETCH   (constant.ts)\n                        \n                        \n                            NOT_ABLESLOTS_FETCH   (constant.ts)\n                        \n                        \n                            NOT_FOUND   (constant.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorators.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorators.ts)\n                        \n                        \n                            SLOTS_ADDED   (constant.ts)\n                        \n                        \n                            SLOTS_ADDED_ID   (constant.ts)\n                        \n                        \n                            SLOTS_FETCHED_SUCCESS   (constant.ts)\n                        \n                        \n                            SLOTS_ID_NOTFOUND   (constant.ts)\n                        \n                        \n                            SLOTS_NOT_FOUND   (constant.ts)\n                        \n                        \n                            SLOTS_NOT_SOLD   (constant.ts)\n                        \n                        \n                            SLOTS_NOTFOUND_ID   (constant.ts)\n                        \n                        \n                            SLOTS_SOLD   (constant.ts)\n                        \n                        \n                            SLOTS_STATUS_SUCCESS   (constant.ts)\n                        \n                        \n                            UNABLE_TO_UPDATE   (constant.ts)\n                        \n                        \n                            UNAUTHORIZED_EXCEPTION   (constant.ts)\n                        \n                        \n                            USER_ID_NOTFOUND   (constant.ts)\n                        \n                        \n                            USER_LOGIN   (constant.ts)\n                        \n                        \n                            USER_REGISTER   (constant.ts)\n                        \n                        \n                            USER_REGISTERED   (constant.ts)\n                        \n                        \n                            USER_WITH_BOOKINGSDATA   (constant.ts)\n                        \n                        \n                            USER_WITH_LOCATIONSDATA   (constant.ts)\n                        \n                        \n                            USER_WITH_SLOTSSDATA   (constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BOOKINGS_ADDED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings added Successfully\"\n                    \n                \n\n            \n                \n                    Locations added Successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_ADDED_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings added Successfully\"\n                    \n                \n\n            \n                \n                    Slots added Successfully with id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_FETCHED_SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings fetched Successfully\"\n                    \n                \n\n            \n                \n                    Locations fetched Successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_ID_NOTFOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings id is not found\"\n                    \n                \n\n            \n                \n                    locations id is not found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings is not found\"\n                    \n                \n\n            \n                \n                    Locations is not found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_NOT_SOLD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings is not sold\"\n                    \n                \n\n            \n                \n                    locations is not sold\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_NOTFOUND_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Unable to fetch bookings details\"\n                    \n                \n\n            \n                \n                    Locations not found for the id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_SOLD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings is sold\"\n                    \n                \n\n            \n                \n                    locations is sold\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOKINGS_STATUS_SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Bookings status updated successfully\"\n                    \n                \n\n            \n                \n                    Locations status updated successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFLICT_EXCEPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"User already exist\"\n                    \n                \n\n            \n                \n                    User already exist\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FAILED_FETCH_BOOKINGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Failed to fetch Bookings\"\n                    \n                \n\n            \n                \n                    Failed to fetch Locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FAILED_FETCH_LOCATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Failed to fetch Locations\"\n                    \n                \n\n            \n                \n                    Failed to fetch Locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FAILED_FETCH_SLOTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Failed to fetch slots\"\n                    \n                \n\n            \n                \n                    Failed to fetch Locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FAILED_FETCH_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Failed to fetch USER\"\n                    \n                \n\n            \n                \n                    Failed to fetch USER\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FAILED_TO_FETCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Failed to fetch for this user\"\n                    \n                \n\n            \n                \n                    Failed to fetch for this user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FETCH_ID_SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Fetch the id successfully\"\n                    \n                \n\n            \n                \n                    Fetch the id successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FETCHED_SUCCESSFULLY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"User fetched successfully\"\n                    \n                \n\n            \n                \n                    User fetched successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_SERVER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Unable to register, please try again \"\n                    \n                \n\n            \n                \n                    Unable to register, please try again\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LIST_OF_BOOKINGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"List of Bookings fetched successfully\"\n                    \n                \n\n            \n                \n                    List of Locations fetched successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LIST_OF_LOCATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"List of Locations fetched successfully\"\n                    \n                \n\n            \n                \n                    List of Locations fetched successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LIST_OF_SLOTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"List of slots fetched successfully\"\n                    \n                \n\n            \n                \n                    List of Locations fetched successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_ADDED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Locations added Successfully\"\n                    \n                \n\n            \n                \n                    Locations added Successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_ADDED_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Locations added Successfully with id : \"\n                    \n                \n\n            \n                \n                    Locations added Successfully with id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_FETCHED_SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Locations fetched Successfully\"\n                    \n                \n\n            \n                \n                    Locations fetched Successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_ID_NOTFOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"locations id is not found\"\n                    \n                \n\n            \n                \n                    locations id is not found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Locations is not found\"\n                    \n                \n\n            \n                \n                    Locations is not found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_NOT_SOLD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"locations is not sold\"\n                    \n                \n\n            \n                \n                    locations is not sold\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_NOTFOUND_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Unable to post location details\"\n                    \n                \n\n            \n                \n                    Locations not found for the id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_SOLD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"locations is sold\"\n                    \n                \n\n            \n                \n                    locations is sold\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCATIONS_STATUS_SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Locations status updated successfully\"\n                    \n                \n\n            \n                \n                    Locations status updated successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NO_BOOKINGS_WITHUSER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No Bookings with user with the id\"\n                    \n                \n\n            \n                \n                    No locations with user with the id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NO_LOCATIONS_WITHUSER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No locations with user with the id\"\n                    \n                \n\n            \n                \n                    No locations with user with the id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NO_SLOTS_WITHUSER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No Slots with user with the id\"\n                    \n                \n\n            \n                \n                    No locations with user with the id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_ABLE_FETCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Unable to fetch list of Locations\"\n                    \n                \n\n            \n                \n                    Not able to fetch list of Locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_ABLEBOOKINGS_FETCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Not able to fetch list of Bookings\"\n                    \n                \n\n            \n                \n                    Not able to fetch list of Locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_ABLESLOTS_FETCH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Unable to fetch list of slots\"\n                    \n                \n\n            \n                \n                    Not able to fetch list of Locations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No User Found\"\n                    \n                \n\n            \n                \n                    No User Found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_ADDED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Slots added Successfully\"\n                    \n                \n\n            \n                \n                    Locations added Successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_ADDED_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"slots added Successfully with id : \"\n                    \n                \n\n            \n                \n                    Slots added Successfully with id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_FETCHED_SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"slots fetched Successfully\"\n                    \n                \n\n            \n                \n                    Locations fetched Successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_ID_NOTFOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Slots id is not found\"\n                    \n                \n\n            \n                \n                    locations id is not found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Slots is not found\"\n                    \n                \n\n            \n                \n                    Locations is not found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_NOT_SOLD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Slots is not sold\"\n                    \n                \n\n            \n                \n                    locations is not sold\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_NOTFOUND_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"slots not found for the id\"\n                    \n                \n\n            \n                \n                    Locations not found for the id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_SOLD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"slots is sold\"\n                    \n                \n\n            \n                \n                    locations is sold\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SLOTS_STATUS_SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Slots status updated successfully\"\n                    \n                \n\n            \n                \n                    Locations status updated successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNABLE_TO_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Unable to update the Locations status please try again\"\n                    \n                \n\n            \n                \n                    Unable to update the Locations status please try again\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNAUTHORIZED_EXCEPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Invalid Credential\"\n                    \n                \n\n            \n                \n                    Invalid Credential\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ID_NOTFOUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"User id is not found\"\n                    \n                \n\n            \n                \n                    User id is not found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"User Login Successfully\"\n                    \n                \n\n            \n                \n                    User Login Successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_REGISTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'User registered successfully'\n                    \n                \n\n            \n                \n                    User registered successfully\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_REGISTERED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"User registered successfully with id : \"\n                    \n                \n\n            \n                \n                    User registered successfully with id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_WITH_BOOKINGSDATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"user with Bookings data fetched successfully for Id : \"\n                    \n                \n\n            \n                \n                    user with locations data fetched successfully for userId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_WITH_LOCATIONSDATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"user with locations data fetched successfully for userId : \"\n                    \n                \n\n            \n                \n                    user with locations data fetched successfully for userId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_WITH_SLOTSSDATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"user with slots data fetched successfully for Id : \"\n                    \n                \n\n            \n                \n                    user with locations data fetched successfully for userId\n\n                \n            \n\n        \n    \n\n    src/users/roles/roles.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    Roles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    Roles key\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
